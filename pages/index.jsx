import { useState, useEffect } from "react";
import { Group } from "three";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";
import { GLTFExporter } from "three/examples/jsm/exporters/GLTFExporter";
import AvatarIframe from "@/components/AvatarIframe";
import styles from "@/styles/App.module.css";
import AWS from "aws-sdk";
import Image from "next/image";
import { allAvatarModels, femaleAvatarModels } from "@/constants/avatarImgs";
import { UserIcon } from "@heroicons/react/20/solid";
import { Teko } from '@next/font/google'

const S3_BUCKET = "abp-metaverse-bucket";
const REGION = "us-east-1";

const inter = Teko({
  weight: ['300', '700'],
  style: ['normal'],
  subsets: ['latin'],
  display: 'swap',
})

const myBucket = new AWS.S3({
  params: { Bucket: S3_BUCKET },
  region: REGION,
});



const maleAnimations = {
  //   Anger: "./animations/male/Anger.glb",
  //   Clap: "./animations/male/Clap.glb",
  //   Fear: "./animations/male/Fear.glb",
  //   Fly: "./animations/male/Fly.glb",
  //   HandRaised: "./animations/male/HandRaised.glb",
  Idle: "./animations/male/Idle.glb",
  //   Laugh: "./animations/male/Laugh.glb",
  //   Run: "./animations/male/Run.glb",
  //   RunBack: "./animations/male/RunBack.glb",
  //   RunLeft: "./animations/male/RunLeft.glb",
  //   RunRight: "./animations/male/RunRight.glb",
  //   SitEnd: "./animations/male/SitEnd.glb",
  //   SitStart: "./animations/male/SitStart.glb",
  //   Sitting: "./animations/male/Sitting.glb",
  Walk: "./animations/male/Walk.glb",
  //   Dancing: "./animations/male/Dancing.glb",
  WalkBack: "./animations/male/WalkBack.glb",
  WalkLeft: "./animations/male/WalkLeft.glb",
  WalkRight: "./animations/male/WalkRight.glb",
  //   Wave: "./animations/male/Wave.glb",
};

const femaleAnimations = {
  //   Anger: "./animations/female/Anger.glb",
  //   Clap: "./animations/female/Clap.glb",
  //   Fear: "./animations/female/Fear.glb",
  //   Fly: "./animations/female/Fly.glb",
  //   HandRaised: "./animations/female/HandRaised.glb",
  Idle: "./animations/female/IdleFemale.glb",
  //   Laugh: "./animations/female/Laugh.glb",
  //   Run: "./animations/female/Run.glb",
  //   RunBack: "./animations/female/RunBack.glb",
  //   RunLeft: "./animations/female/RunLeft.glb",
  //   RunRight: "./animations/female/RunRight.glb",
  //   SitEnd: "./animations/female/SitEnd.glb",
  //   SitStart: "./animations/female/SitStart.glb",
  //   Sitting: "./animations/female/Sitting.glb",
  Walk: "./animations/female/WalkFemale.glb",
  //   Dancing: "./animations/female/Dancing.glb",
  WalkBack: "./animations/female/WalkBackFemale.glb",
  WalkLeft: "./animations/female/WalkLeftFemale.glb",
  WalkRight: "./animations/female/WalkRightFemale.glb",
  //   Wave: "./animations/female/Wave.glb",
};

const gltfName = "Armature";

const PreLoader = () => {
  return (
    <div className="bg-[#F0D103] h-screen flex flex-col items-center justify-center ">
      <div>
        <div className=" m-auto  flex justify-between">

          <div>
          <svg width="150" height="90" viewBox="0 0 150 90" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M15.5386 84.5157L19.2966 80.7656C18.9993 80.2912 18.8261 79.7297 18.8261 79.1288C18.8261 79.0894 18.8282 79.0507 18.8296 79.012C17.0001 79.0099 15.19 78.9995 13.486 78.9843C13.486 78.994 13.4853 79.003 13.4853 79.0126C13.4853 81.1162 14.2601 83.0386 15.5386 84.5157ZM21.3887 87.4186V82.1763C20.878 82.0864 20.4102 81.8727 20.0173 81.5664L16.2926 85.2839C17.6619 86.51 19.4352 87.2948 21.3887 87.4186ZM22.4663 87.4186C24.4205 87.2948 26.1938 86.51 27.5631 85.2839L23.8377 81.5664C23.4455 81.872 22.9777 82.0864 22.4663 82.1763V87.4186ZM30.3697 79.0126C30.3697 78.9629 30.3676 78.9138 30.3669 78.8647C28.7467 78.9214 26.9311 78.9587 25.0255 78.9822C25.0275 79.0306 25.0289 79.0797 25.0289 79.1288C25.0289 79.7297 24.8564 80.2912 24.5598 80.7656L28.3171 84.5157C29.5949 83.0386 30.3697 81.1162 30.3697 79.0126ZM42.1413 68.7922L50.8852 64.3603C48.4751 63.1799 45.2791 61.4753 42.1011 59.3642C42.1295 62.3632 42.1544 66.0538 42.1413 68.7922ZM51.545 62.8549C51.5138 62.8307 51.4854 62.8072 51.4556 62.7844C51.4306 62.7844 51.405 62.7851 51.38 62.7851C51.4348 62.8086 51.4902 62.8314 51.545 62.8549ZM53.4915 63.0388L56.4575 61.5355C56.2891 61.4428 56.2004 61.3675 56.2004 61.3675C54.8886 62.0369 53.7646 62.4407 52.7937 62.6378C53.0293 62.7913 53.2622 62.9241 53.4915 63.0388ZM70.9421 64.0969C71.2352 63.7048 71.6697 63.1523 72.1513 62.4642C67.331 62.7173 63.5813 62.4974 61.2161 62.2554C59.5211 63.6508 57.955 64.2607 56.5732 64.406L56.3854 64.5028C61.6167 64.872 66.5735 64.6245 70.9421 64.0969ZM75.1553 54.868L71.082 56.9591C70.9573 57.1514 70.8208 57.3367 70.6683 57.513C68.4737 60.0536 66.1314 60.613 64.627 60.6594C68.0239 60.8896 71.0682 60.6843 73.4548 60.3689C74.2864 58.829 75.0091 56.9564 75.1553 54.868ZM72.1326 50.5648C72.179 51.5889 72.1977 52.6206 72.1076 53.6025L73.6481 52.8218C73.0868 52.1919 72.5719 51.4167 72.1326 50.5648ZM99.7059 56.7123C97.7634 56.2462 95.3962 55.5104 93.7547 55.2103C93.0515 56.3133 91.4806 58.6298 90.0232 59.7424C92.6755 59.0101 96.5659 57.8761 99.7059 56.7123ZM141.86 29.6211C140.833 29.619 139.513 29.7283 138.679 29.7075C138.017 29.6916 136.465 30.2455 134.482 30.5878C134.482 30.5878 130.87 31.2952 129.951 31.1431C129.951 31.1431 128.858 31.8484 128.087 34.3381C131.185 33.6529 137.38 32.0794 141.86 29.6211ZM0 75.1174H3.22443C3.56744 71.2975 4.74272 65.5006 8.61716 62.5092C9.17847 62.0756 9.76266 61.6946 10.3614 61.3543C10.3614 61.3543 19.1059 58.2234 26.4976 54.1723C30.2521 52.1146 35.5337 45.5458 39.0561 46.0043C42.5785 46.4627 42.0207 52.3233 42.0422 54.0921C42.0422 54.0921 42.0602 55.3942 42.0803 57.3083C43.7421 58.5772 45.6297 59.8392 47.7454 61.0017C47.2346 60.3779 46.8376 59.6664 46.48 58.9977C45.1315 56.4668 43.4344 56.455 43.4344 56.455C45.778 55.7275 47.3926 58.5122 47.3926 58.5122C49.701 60.4028 51.9095 59.4188 51.9095 59.4188C50.3517 59.9139 48.8257 58.2716 46.6997 55.5049C44.5743 52.7382 46.2922 51.5674 46.2832 49.7543C46.2742 47.9412 43.8155 47.0395 43.8155 47.0395C43.8155 47.0395 46.0393 47.6763 46.9568 49.3968C47.8743 51.1166 45.8452 52.1939 47.7419 54.043C49.6393 55.8921 49.6407 53.9435 49.6407 53.9435C47.7786 51.4271 48.4217 50.4361 48.8839 48.3741C49.1674 47.1045 48.8216 46.5948 48.5139 46.3915C49.5721 46.8776 49.7765 47.8997 49.5928 47.9972C49.3905 48.1051 49.3953 50.3096 49.8319 51.3738C50.2692 52.438 51.7702 52.8129 51.4452 52.2029C51.1202 51.593 50.8748 49.9134 51.3849 48.3436C51.8949 46.7753 55.9343 44.7603 57.199 43.9593C57.9626 43.4758 58.201 42.9869 58.2703 42.6757C58.088 44.7734 56.5448 45.5071 54.1 47.4219C51.5304 49.4348 52.3266 50.4403 53.4943 51.898C54.6613 53.3557 54.8664 51.2998 56.7395 50.1754C58.6126 49.0517 60.5453 48.2849 61.2203 48.5753C61.8959 48.8664 62.3166 47.2144 63.46 45.6986C64.6034 44.1832 66.2132 42.8096 67.1743 42.1673C68.1355 41.5258 68.5125 40.2905 70.6295 38.6479C72.1783 37.4464 73.9759 37.4996 74.831 37.6153C78.4539 34.5199 83.6097 32.6658 88.1022 33.6251C94.1895 34.9259 100.464 34.6161 105.663 32.3954C105.701 31.9667 105.855 31.2669 106.365 30.3015C107.272 28.5818 108.274 29.8431 107.514 27.7796C107.3 27.2008 108.318 27.5507 108.777 26.9747C109.237 26.4001 109.237 26.9775 109.696 26.0398C109.858 25.7092 110.392 25.4762 111.015 25.3123C111.027 25.1892 111.045 25.0655 111.073 24.9472C111.245 24.2149 111.819 24.1886 112.451 23.8449C113.083 23.5013 113.198 23.3291 113.772 23.2309C114.347 23.132 115.208 23.2309 115.208 23.2309C115.208 23.2309 114.806 22.8132 114.461 22.4322C114.117 22.0512 113.772 22.1252 113.542 21.785C113.313 21.4447 114.232 22.1833 114.863 22.2406C115.495 22.298 115.955 22.6417 116.299 22.2406C116.643 21.8389 116.931 21.7815 117.218 21.785C117.505 21.7884 117.678 21.4952 117.563 21.2663C117.448 21.0367 116.873 21.0367 116.529 20.9793C116.401 20.9586 116.25 20.7878 116.119 20.6094C116.485 20.7131 117.114 20.4732 117.617 20.3397C118.303 20.1585 118.884 20.3397 118.884 20.3397C118.884 20.3397 118.022 19.6039 117.678 19.4954C117.333 19.3868 118.539 19.4324 119.343 19.4891C120.147 19.5472 119.86 19.1455 120.682 18.9256C121.504 18.7057 121.985 18.9256 121.985 18.9256C121.985 18.9256 121.468 18.687 121.181 18.6296C120.894 18.5722 120.32 17.8848 120.147 17.6304C119.975 17.3752 120.682 17.9996 121.296 18.1711C121.91 18.3433 122.904 17.9422 123.479 17.6304C123.91 17.3973 125.036 17.5875 125.575 17.6974C125.504 17.5868 125.436 17.472 125.37 17.3551C125.147 17.2065 124.874 17.0647 124.598 17.0253C123.956 16.9333 123.306 16.338 123.134 16.051C123.003 15.8338 124.047 16.0447 124.82 16.1844C124.634 15.6928 124.55 15.3055 124.626 15.2143C124.768 15.0428 125.535 15.7025 126.267 16.1914C126.402 16.1865 126.568 16.2066 126.809 16.2806C127.556 16.5101 128.251 16.199 128.251 16.199C128.251 16.199 127.153 15.6499 127.012 15.4203C126.872 15.1914 125.89 14.6756 126.694 14.8242C127.417 14.9584 127.63 15.4245 128.096 15.6464C127.84 14.3838 128.019 12.6149 128.26 12.5063C128.54 12.3805 129.187 14.1839 129.813 14.8242C129.813 14.8242 131.002 14.9052 131.404 15.4203C131.806 15.9362 133.241 16.2232 134.275 16.6816C134.968 16.9887 135.118 17.369 135.141 17.5875C135.998 17.5709 137.011 17.564 137.53 17.8945C138.266 18.3634 138.913 19.1282 139.316 19.3211C139.719 19.514 140.579 19.9227 141.85 20.1039C142.338 20.1737 143.32 20.4151 144.392 20.7124C144.392 20.7124 145.892 19.6219 145.979 21.1743C147.165 21.5381 148.22 21.9018 148.586 22.1086C149.44 22.5892 149.963 23.8975 149.998 24.5883C150.032 25.2798 149.688 25.7922 149.26 26.2562C148.337 27.2575 148.337 27.2575 147.996 27.5445C147.767 27.7374 146.905 27.6849 145.982 27.5964C145.982 27.6019 145.983 27.6067 145.983 27.6123C145.983 27.9642 145.865 28.2893 145.669 28.5513C145.989 28.7567 146.401 28.9559 146.931 29.1108C147.873 29.386 147.206 29.8403 146.964 30.2663C146.723 30.6922 146.278 31.7703 145.297 31.4647C144.425 31.1936 143.993 30.2379 143.333 29.8514L143.173 30.1937C143.173 30.1937 137.415 33.8454 127.838 35.4046C127.749 36.0737 127.737 36.8319 127.207 38.8802C127.576 38.9315 127.903 39.1236 127.971 39.6239C128.022 40.0023 127.883 40.9888 127.664 42.1843C127.672 42.3372 127.676 42.4961 127.67 42.6662C127.644 43.4301 127.506 43.8607 127.279 44.1232C127.147 44.7547 127.009 45.3868 126.877 45.9752C128.646 46.4648 136.861 45.7685 137.779 46.8576C138.714 47.9675 138.315 49.4058 138.928 50.4742C139.132 50.8317 140.221 54.3943 140.536 55.2131C140.85 56.0318 140.935 56.9411 140.689 57.4618C140.689 57.4618 141.385 59.8296 140.536 60.9353C140.536 60.9353 139.549 62.7685 138.902 64.074C137.882 66.1285 135.925 61.1248 135.741 60.1981C135.557 59.2708 137.761 58.6015 137.932 57.4618C138.103 56.3229 134.792 50.4742 134.792 50.4742C134.792 50.4742 133.031 50.3469 130.619 50.9472C129.084 51.3289 128.412 52.3025 126.602 52.9048C127.351 54.3079 128.192 55.5595 129.077 56.307C132.139 58.894 133.89 60.1435 134.082 61.4477C134.274 62.7526 132.081 66.5572 130.89 68.6387C129.699 70.7194 129.244 72.101 127.971 72.6349C126.698 73.1687 124.671 72.6563 121.976 73.3983C119.28 74.1403 118.937 74.7903 118.311 74.0864C117.685 73.3831 118.514 70.4311 120.682 69.0439C120.682 69.0439 123.804 69.8543 124.727 69.5404C125.649 69.2278 127.421 69.1967 127.421 69.1967C127.421 69.1967 128.611 64.6259 128.666 62.2429C128.666 62.2429 124.465 58.8124 121.816 57.3706C121.093 56.9771 120.191 56.4239 119.239 55.7898C118.139 56.3188 116.925 56.686 115.61 56.7192C115.61 56.7192 111.304 57.1223 109.007 57.3512C107.182 57.5331 104.634 57.4985 102.281 57.1887C98.0866 58.636 90.3906 61.2167 87.5277 61.707C87.3323 61.7402 87.1556 61.7672 86.9942 61.79C86.5368 62.0756 86.0628 62.3632 85.5874 62.644C85.5777 62.7111 85.5749 62.7733 85.5784 62.8293C85.6823 64.195 92.9808 67.6809 93.5566 68.2535C94.1324 68.8268 95.1645 69.3627 95.746 70.6267C96.3272 71.8908 98.1514 71.5402 98.1514 71.5402C99.1849 73.3741 101.023 76.6982 100.448 76.6982C99.874 76.6982 95.746 75.8953 95.746 75.8953C95.746 75.8953 95.7386 74.6354 95.746 74.0622C95.7527 73.4889 95.0497 73.26 94.1324 73.1418C93.2147 73.0242 92.4078 71.4254 92.4078 71.4254C90.3267 69.9263 80.9798 66.9943 79.0041 66.0407C77.5863 67.0205 77.6674 67.7819 77.6674 67.7819C77.6674 67.7819 78.3985 78.5943 79.8877 80.581C80.2141 81.0159 82.3006 82.2233 82.3006 82.2233C82.6353 82.6894 83.8203 85.0481 83.3526 85.2812C82.5446 85.6829 77.9099 86.1511 77.612 84.3635C77.3819 82.9881 77.42 81.4599 77.42 81.4599C77.9196 80.1253 73.0938 71.8576 71.6184 68.0405C71.6184 68.0405 71.1014 67.3207 70.7612 66.4798C64.0317 67.0261 58.4221 66.6264 54.9426 66.2046H54.9412C54.391 66.1375 53.8948 66.0704 53.4555 66.0068L42.0941 71.839C42.0796 72.2006 42.063 72.4613 42.0422 72.5955C41.8128 74.0857 40.8939 77.1808 36.6439 78.3267C35.9045 78.5258 34.4049 78.6717 32.4348 78.7762C32.4361 78.8543 32.4382 78.9331 32.4382 79.0126C32.4382 84.804 27.7322 89.5 21.9278 89.5C16.1235 89.5 11.4182 84.804 11.4182 79.0126C11.4182 78.9961 11.4189 78.9808 11.4189 78.9649C6.63318 78.9124 3.10384 78.8363 3.10384 78.8363C3.10384 78.8363 3.07957 78.3447 3.09413 77.5238H0V75.1174Z" fill="#900000"/>
          <path d="M38.6505 18.2444C38.623 17.7833 38.604 17.3248 38.5967 16.8716C38.5875 16.051 38.6138 15.2434 38.7551 14.4886C38.7903 14.3012 38.8439 14.1119 38.8867 13.9255C38.9355 13.7404 38.9687 13.5521 39.0318 13.3745C39.0885 13.1951 39.1449 13.0176 39.2004 12.8423L39.2419 12.7111L39.2917 12.5835C39.325 12.499 39.3582 12.4148 39.3909 12.3316C39.6476 11.6613 39.9553 11.0528 40.2741 10.5136C40.5904 9.97179 40.9314 9.50751 41.2465 9.10864C41.4094 8.91334 41.5605 8.72946 41.7127 8.57068C41.7881 8.49065 41.8597 8.41412 41.9285 8.34044C41.9608 8.30869 41.9896 8.28042 42.0204 8.25025L38.6505 18.2444ZM37.8662 21.9375C37.8671 22.7679 37.8503 23.5818 37.8142 24.3611C37.7781 25.1404 37.714 25.8858 37.6101 26.5749C37.5068 27.2637 37.3692 27.8957 37.187 28.4403C37.0057 28.9853 36.7873 29.4406 36.5547 29.7884C36.479 29.9008 36.4026 30.0012 36.3275 30.0929C36.2917 30.0955 36.2549 30.0996 36.2166 30.1044C35.8077 30.1549 35.4243 30.3041 35.1511 30.0567C35.12 30.0285 35.0741 29.9767 35.0177 29.9087L37.8649 21.4646C37.8652 21.6218 37.8658 21.7806 37.8662 21.9375ZM35.3621 33.3258C35.3365 33.7434 35.2344 34.2385 35.0487 34.7815C34.8639 35.3255 34.5911 35.9117 34.2561 36.5218C33.9211 37.1325 33.5208 37.7644 33.0784 38.4062C32.635 39.048 32.1558 39.7051 31.6529 40.3647C31.5572 40.4889 31.4608 40.6149 31.3654 40.7397L34.432 31.6452C34.4523 31.6531 34.4649 31.6592 34.4678 31.6627C34.6193 31.8827 34.6326 32.2314 34.9917 32.6252C35.1016 32.7456 35.2297 32.8536 35.366 32.9507C35.3701 33.0679 35.3694 33.1924 35.3621 33.3258ZM29.3685 45.7703C29.3577 45.4521 29.3222 45.085 29.2766 44.7001C29.5238 44.3902 29.7783 44.0828 30.0404 43.7776L29.3685 45.7703ZM13.9003 21.853C13.9003 21.853 14.2071 21.6234 14.5109 21.0321C14.6667 22.2747 14.8833 23.5374 15.0999 23.8359C15.5085 24.3983 16.1726 24.8591 16.1726 24.8591C16.4277 25.6266 16.4273 25.8823 16.7562 26.4965C16.9189 26.8004 16.9899 27.0792 17.0204 27.2831C16.8942 27.2945 16.7749 27.3056 16.6697 27.3152C16.108 27.3666 16.4143 27.6222 16.1006 27.776C15.7867 27.9293 16.2102 28.3898 16.1006 28.6455C15.9911 28.9014 16.057 29.0037 15.8015 29.2085C15.5462 29.4133 15.8015 29.5667 15.8529 29.9246C15.9037 30.2832 15.444 30.6925 15.5462 30.9481C15.5603 30.984 15.5936 31.0129 15.6381 31.0377C15.634 31.0488 15.6296 31.0602 15.6253 31.072C15.2139 31.4264 14.6898 31.8869 14.1859 32.3585C13.9704 31.9342 13.6608 31.5036 13.5834 31.1568C13.4303 30.4705 13.6697 29.3876 13.5834 28.6204C13.497 27.8525 13.7942 25.9722 13.6312 25.4345C13.4684 24.8975 13.1335 24.9359 13.1335 24.9359C13.21 24.2694 13.7853 22.8505 13.9003 21.853ZM30.1155 42.3717C29.7887 42.8062 29.4617 43.2419 29.1447 43.6826C29.076 43.1739 29.0091 42.6766 28.9746 42.2539C28.8833 41.151 28.8361 38.7514 28.9495 37.4469C29.0627 36.142 28.759 33.6856 28.6827 33.5036C28.606 33.322 28.6827 32.5344 28.9124 32.2276C29.0268 32.0749 28.8573 31.8659 28.658 31.6938C28.9346 31.4343 28.6906 31.0358 28.7185 30.7944C28.7546 30.4877 28.5806 30.4365 28.69 30.0783C28.7993 29.7201 28.5806 29.7715 28.2814 29.4645C28.1689 29.3489 28.1845 29.2368 28.2523 29.1243C29.0861 29.5369 30.4876 30.2285 30.6742 30.3089C30.6742 30.3089 30.7509 30.5004 30.9804 30.616C31.168 30.7096 33.3433 31.3083 34.161 31.5576L30.8282 41.4409C30.5912 41.7506 30.3532 42.0608 30.1155 42.3717ZM42.6397 7.06985C42.5975 7.10701 42.537 7.16035 42.4631 7.2299C42.3139 7.37058 42.099 7.57669 41.8455 7.85551C41.5843 8.12735 41.2962 8.48176 40.972 8.89174C40.8183 9.1026 40.6456 9.32077 40.4871 9.56721C40.4072 9.68979 40.316 9.80951 40.2358 9.94067C40.1543 10.0709 40.0716 10.2046 39.9867 10.3411C39.6644 10.8956 39.3234 11.505 39.0404 12.1862C39.0042 12.2713 38.9681 12.3564 38.9307 12.4425L38.8746 12.5711L38.8255 12.7038C38.7596 12.8814 38.6927 13.0611 38.6252 13.2427C38.5526 13.4228 38.5044 13.613 38.443 13.8017C38.3862 13.9922 38.3206 14.1783 38.2702 14.3787C38.0601 15.1739 37.972 16.0116 37.9188 16.8554C37.8671 17.7005 37.8639 18.5557 37.8589 19.4071C37.8598 19.7989 37.8614 20.1905 37.8624 20.5808L34.8069 29.6433C34.2922 28.9776 33.4248 27.7674 33.1814 27.5711C32.8638 27.3155 33.0036 27.5571 32.7995 27.6594C32.5951 27.7617 32.1752 27.0846 31.695 26.6753C30.8856 25.9852 30.0616 25.2684 30.0616 25.2684C29.912 24.9994 29.964 24.7057 29.964 24.7057C30.6486 23.759 30.5389 22.4799 30.5389 22.4799C30.8067 21.7892 30.2708 21.4052 30.4238 20.5611C30.5772 19.7167 30.5772 18.9495 30.4238 17.7211C30.2873 16.6277 28.9378 15.5959 28.6431 15.3828C29.0585 15.4448 28.9708 15.5165 29.3463 15.3416C29.8173 15.1231 29.8062 15.7509 30.1944 15.8023C30.5829 15.8535 31.0586 15.8023 31.0586 15.8023C31.0586 15.8023 30.5722 15.8023 30.1944 15.3416C29.8173 14.8811 29.9596 15.2396 29.7038 14.8811C29.597 14.7312 29.3289 14.5813 29.0779 14.4689C29.2538 14.4879 29.4376 14.4533 29.6528 14.3184C30.0616 14.0624 30.5208 14.7788 31.0586 14.9325C31.5961 15.0859 31.6446 15.0859 32.2503 14.9837C32.8566 14.8811 32.6147 15.3416 32.8702 15.3416C33.1256 15.3416 33.5848 15.0859 33.5848 15.0859C33.5848 15.0859 33.1256 15.1879 32.9722 15.0859C32.8188 14.9837 32.8702 14.6254 32.7171 14.574C32.5637 14.5232 32.0528 14.83 31.6446 14.574C31.2361 14.3184 31.3382 13.909 31.0586 13.3974C30.9208 13.1443 30.5379 13.0697 30.1865 13.0589C30.4219 13.0268 30.7135 12.9741 31.0586 12.8855C32.056 12.6298 32.0528 13.0903 32.7171 13.1437C33.3807 13.1967 33.4828 13.2437 33.8913 13.103C34.2998 12.9623 34.5039 13.2437 35.0658 13.103C35.6274 12.9623 35.7808 12.2208 35.7808 12.2208C35.7808 12.2208 35.423 12.4761 35.2189 12.7531C35.0148 13.0293 34.8104 12.7832 34.4849 12.681C34.1591 12.5784 33.9423 12.8855 33.7382 12.681C33.5338 12.4761 33.2274 12.2208 33.4828 12.016C33.7382 11.8112 33.9423 12.1694 34.4849 12.1182C35.0272 12.0668 35.2189 11.5041 35.2189 11.5041C35.2189 11.5041 34.6573 11.7089 34.1978 11.76C33.7382 11.8108 33.5848 11.0436 33.2787 10.6857C32.9722 10.3271 32.2573 10.2252 32.7171 10.1738C33.1766 10.1226 33.0743 10.0201 33.5338 9.96893C33.9934 9.9178 34.4022 10.3783 34.9641 10.3783C35.5254 10.3783 35.5767 9.96894 35.8832 9.61072C36.189 9.2525 36.853 9.20169 36.853 9.20169C36.853 9.20169 36.3424 8.94573 35.8318 9.2525C35.3206 9.55959 34.9641 9.9178 34.8104 9.45733C34.6573 8.99685 34.4022 9.2525 34.1654 9.15024C33.929 9.04799 33.6872 8.84315 33.4314 8.48494C33.1766 8.12704 32.3596 8.12703 32.0021 7.81995C31.6443 7.51286 31.6446 7.20577 31.3889 6.79642C31.1341 6.38708 30.1944 6.13144 30.1944 6.13144C30.9915 6.28483 31.1851 6.13143 31.6957 6.23369C32.2062 6.33595 32.4613 7.00126 32.9722 7.19148C33.4828 7.38139 34.2998 7.30835 34.1464 7.19148C33.9934 7.0743 33.1766 7.00126 32.5637 6.38708C31.9511 5.77322 31.9511 5.36388 31.3889 5.05679C30.8276 4.74969 30.5722 4.85195 29.8062 4.85195C29.0405 4.85195 28.6827 5.05678 28.3252 4.69856C27.968 4.34035 28.0697 4.34035 27.9712 3.80048C27.872 3.26062 27.4061 3.36827 26.7932 2.95892C26.1806 2.54958 26.3336 2.70296 25.8231 2.29362C25.3125 1.88427 24.2912 1.83347 23.4741 1.73089C23.3593 1.7166 23.241 1.7077 23.1214 1.7039C23.1479 1.40379 23.1213 0.977615 22.8103 0.759766C22.2998 0.40155 21.4917 0.350426 20.5425 1.01541C19.5933 1.68104 19.1215 2.29489 18.9999 3.47148C18.9073 4.36575 19.1219 4.81607 19.5659 4.95866C19.3967 5.23209 19.2376 5.52837 19.287 5.82498C19.3029 5.92089 19.3058 6.02441 19.3013 6.13239C19.289 6.18002 19.0711 7.01714 18.6743 7.51445C18.2657 8.02605 18.0025 8.74249 18.364 9.35635C18.7254 9.97052 19.3853 10.2262 18.9788 10.6866C18.6346 11.0769 17.9281 11.9807 18.0433 12.9322C17.3247 13.0055 16.5736 13.0392 16.0704 13.0392C15.8088 13.0392 15.5658 13.0608 15.3399 13.1033C14.1951 13.0881 11.78 14.0043 11.4101 15.7255C10.8903 18.1435 9.44593 22.1928 9.62395 22.7869C9.95846 23.8997 10.1048 24.8842 10.247 25.8089C10.1424 25.8778 10.0524 25.963 10.0695 26.0487C10.0971 26.1862 10.477 27.781 10.7888 28.8944C10.854 29.3235 10.8965 29.6864 10.8903 29.8735C10.8681 30.5124 11.2186 31.3832 11.1419 31.8907C11.0652 32.3982 10.9888 33.7624 11.6781 33.9927C11.9371 34.0791 12.2829 34.1222 12.6434 34.1086C12.1299 34.784 11.5192 35.3693 9.60874 35.8174C6.66319 36.5081 5.05493 37.544 3.67618 39.5012C2.29769 41.4581 0 43.0637 0 43.0637C0 43.0637 2.06792 41.8039 2.41258 42.4946C2.75723 43.185 2.87224 42.8265 3.44654 43.0637C4.02109 43.3 4.56246 43.5305 4.56246 43.5305L5.74449 44.2212C5.74449 44.2212 5.85925 44.7833 6.89334 43.0637C7.9273 41.3434 8.64618 40.0767 10.0675 39.156C11.1445 38.4583 12.5266 38.0242 13.8827 37.0039C13.7098 38.1388 13.6626 38.7035 12.4743 39.8467C10.7993 41.4581 10.6012 40.8696 9.60874 43.0637C8.61623 45.2575 7.69728 46.9844 6.66319 47.9053C5.62922 48.8263 4.82503 50.323 4.59513 50.7832C4.36549 51.2439 5.39958 49.9775 5.74424 50.0924C6.08889 50.2077 6.31853 50.5532 6.66319 50.323C7.00784 50.0924 7.58239 49.7472 7.58239 49.7472C7.58239 49.7472 7.92705 50.7555 7.92705 50.8845C7.92705 51.0134 8.15669 51.2439 8.15669 51.5891C8.15669 51.9347 8.61623 50.8984 9.07589 50.438C9.53556 49.9775 10.0249 49.6323 10.0675 49.9775C10.0985 50.2309 9.83749 51.0159 9.69611 51.417C9.84234 51.0798 10.1925 50.5012 10.8903 50.438C11.8813 50.3487 11.1563 51.6584 11.1563 51.6584C11.1563 51.6584 11.385 51.4777 11.6912 51.217C11.74 51.761 11.9184 52.3456 11.9846 52.874C12.0612 53.4882 11.9079 53.795 11.6781 54.1021C11.4482 54.4092 11.7548 54.7928 11.8312 55.1764C11.9079 55.5603 11.4482 55.7909 11.3718 56.635C11.2953 57.4794 11.4482 57.9399 11.2186 58.6303C10.9888 59.321 10.9888 59.8586 10.9122 60.4725C10.8698 60.811 10.8752 61.1029 11.0544 61.4122C10.9038 61.5322 10.7537 61.6974 10.7078 61.905C10.6056 62.3658 10.9379 62.7244 10.7844 63.2868C10.6314 63.8495 10.6216 64.0543 10.5035 64.8473C10.3825 65.6625 10.5291 66.2033 10.325 66.9455C10.1451 67.5984 9.81423 68.4038 9.78872 69.1205C9.76311 69.8366 9.77819 69.8735 9.95672 70.0269C10.1356 70.1806 13.4144 70.3994 13.5164 70.4248C13.6187 70.4505 15.2271 70.5785 16.044 70.4279C16.1195 70.414 16.9237 70.3508 16.9748 69.8897C17.026 69.4295 16.8791 69.2926 16.1209 68.8896C15.6328 68.6308 14.0527 67.7899 14.2569 66.9455C14.3532 66.5469 14.64 65.9731 14.742 65.4872C14.8443 65.001 15.3037 64.1826 15.4823 63.9264C15.6612 63.6707 15.8801 62.704 15.8801 62.4481C16.1538 62.3023 16.137 62.0518 16.427 61.4706C16.8103 60.7027 16.6569 59.321 17.1166 58.4769C17.5763 57.6325 17.4994 55.714 17.8058 54.2558C18.1124 52.7975 18.1887 52.4136 18.7251 52.2602C19.2611 52.1065 18.6485 51.4926 18.7251 50.8784C18.8017 50.2646 18.7251 50.034 19.4145 49.1131C20.1038 48.1921 19.5678 47.194 20.0271 45.8126C20.4825 44.4439 20.7127 43.9783 21.2382 42.7014C21.5196 43.0129 21.7995 43.4019 21.891 43.7916C22.0954 44.6614 22.1972 45.1219 22.402 45.9402C22.6059 46.7596 22.6059 47.3734 22.8103 47.9365C23.0145 48.4989 23.2186 48.8574 23.27 49.2668C23.3211 49.6761 23.2207 49.8549 23.5762 50.4948C23.6515 50.6307 23.7607 50.7736 23.8843 50.9143C23.923 51.1627 24.016 51.3672 24.24 52.4136C24.6347 54.2564 24.1634 55.4835 24.24 56.8652C24.3167 58.2467 24.3606 58.8357 24.7763 59.7818C25.1582 60.6516 24.8786 61.5643 25.2003 61.8447C25.1857 62.3795 25.2539 63.1518 25.1338 63.5939C24.9804 64.1566 25.3382 64.4126 25.3889 65.5247C25.4269 66.3475 25.579 66.8563 25.3749 67.5984C25.1949 68.2513 25.0441 68.4038 25.0184 69.1205C24.9927 69.8366 25.0076 69.8735 25.1864 70.0269C25.3651 70.1806 28.644 70.3994 28.7461 70.4248C28.8481 70.4505 30.4565 70.5785 31.2738 70.4279C31.3489 70.414 32.1533 70.3508 32.2043 69.8897C32.2553 69.4295 32.1086 69.2926 31.3505 68.8896C30.8625 68.6308 29.2823 67.7899 29.4864 66.9455C29.5827 66.5469 29.3463 65.5641 29.4484 65.0779C29.5507 64.5917 29.2699 63.2299 29.4484 62.974C29.5998 62.7577 29.7792 62.0349 29.8312 61.6618C29.8943 61.6005 29.9516 61.5363 30.0011 61.4706C30.6298 60.6262 29.5254 58.6303 29.5254 57.1723C29.5254 55.714 29.6021 55.4835 29.9082 53.6419C30.2147 51.7994 29.6781 51.3389 29.5083 50.9553C29.3381 50.5717 29.7551 50.1877 29.5083 49.4202C29.2611 48.6526 29.0658 48.9597 29.3723 48.269C29.6135 47.7247 29.475 47.2273 29.4049 46.5531L30.5287 43.2203C30.615 43.1234 30.7008 43.0265 30.7883 42.9306C31.3585 42.3053 31.9289 41.6804 32.4902 41.0646C33.0521 40.4444 33.6092 39.8315 34.1293 39.2122C34.6494 38.5933 35.1384 37.974 35.5767 37.3525C36.015 36.7314 36.3918 36.1007 36.6986 35.4735C37.0032 34.846 37.2225 34.2127 37.3413 33.6084C37.3879 33.3744 37.4184 33.1451 37.4355 32.9247C37.54 32.7526 37.5213 32.5712 37.5213 32.5712C37.7809 32.3477 37.7552 31.8262 37.7552 31.8262C37.9394 31.6674 37.9803 31.5188 37.9495 31.3845C38.0731 31.1939 38.1916 30.9878 38.2997 30.7662C38.571 30.2139 38.7802 29.5769 38.9177 28.8925C39.0534 28.2078 39.1354 27.4778 39.1633 26.7172C39.1906 25.9566 39.1766 25.1668 39.138 24.3586C39.0993 23.5507 39.0274 22.7247 38.9557 21.8898C38.8819 21.0594 38.8071 20.2156 38.732 19.3718C38.7209 19.2426 38.7111 19.1136 38.7016 18.9844L42.4593 7.83995C42.4695 7.83075 42.4802 7.8209 42.4904 7.81169C42.5978 7.72214 42.6894 7.64433 42.7661 7.58717C42.8425 7.52746 42.8995 7.48491 42.9379 7.45887C42.9791 7.43061 43 7.41632 43 7.41632L42.7005 7.01713C42.7005 7.01713 42.6799 7.03524 42.6397 7.06985Z" fill="#900000"/>
          </svg> 
          </div>


          <div>
          <svg width="110" height="96" viewBox="0 0 110 96" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g clip-path="url(#clip0_250_122147)">
            <path d="M63.5702 73.8079H46.9434L43.72 76.06H43.7136V76.0645L43.7065 76.0696H43.7136V76.8521H66.6433V76.06H66.6235L63.5702 73.8079Z" fill="#900000"/>
            <path d="M55.1154 77.3064H45.6345C46.1941 77.9466 46.8439 78.9602 46.9309 80.4469L46.9615 92.8694H50.2799V82.7873C50.3704 81.4401 51.0133 78.239 55.1222 77.9982C59.0757 78.1681 59.9125 81.4401 60.0024 82.7873V92.8694H63.3214L63.3514 80.4469C63.4385 78.9602 64.0881 77.9466 64.6479 77.3064H55.1674H55.1154Z" fill="#900000"/>
            <path d="M46.3115 93.236V94.2241H50.7543V93.236H46.3115Z" fill="#900000"/>
            <path d="M45.689 96.6677H51.3768V94.67H45.689V96.6677Z" fill="#900000"/>
            <path d="M59.5354 93.236V94.2241H63.9785V93.236H59.5354Z" fill="#900000"/>
            <path d="M58.9128 96.6677H64.601V94.67H58.9128V96.6677Z" fill="#900000"/>
            <path d="M63.8879 72.5907H46.4551V73.3811H63.8879V72.5907Z" fill="#900000"/>
            <path d="M62.9934 70.9925H47.3499V72.1738H62.9934V70.9925Z" fill="#900000"/>
            <path d="M48.0058 70.4571H62.2381L56.5341 64.4588H53.4842C53.4842 64.4588 47.8644 70.5987 48.0058 70.4571Z" fill="#900000"/>
            <path d="M53.5125 63.9087V64.1331H56.4493V63.9087C56.4493 63.5008 56.1191 63.1699 55.7125 63.1699H54.2492C53.8427 63.1699 53.5125 63.5008 53.5125 63.9087Z" fill="#900000"/>
            <path d="M55.5174 62.9541C55.6966 62.9541 55.8419 62.8085 55.8419 62.6289C55.8419 62.4493 55.6966 62.3037 55.5174 62.3037H54.4442C54.2649 62.3037 54.1196 62.4493 54.1196 62.6289C54.1196 62.8085 54.2649 62.9541 54.4442 62.9541H55.5174Z" fill="#900000"/>
            <path d="M8.58667 64.6243H13.9287V64.1631H8.58667V64.6243Z" fill="#900000"/>
            <path d="M10.3541 67.1185L13.9216 65.0097V64.8732H8.59333L6.10366 66.5349H6.09716V66.5383L6.09009 66.5417H6.09716V67.1196L10.3541 67.1185Z" fill="#900000"/>
            <path d="M96.3887 64.728H101.73V64.2669H96.3887V64.728Z" fill="#900000"/>
            <path d="M104.22 67.2234V66.6455H104.227L104.22 66.6421V66.6387H104.214L101.724 64.977H96.3953V65.1135L99.9633 67.2222L104.22 67.2234Z" fill="#900000"/>
            <path d="M70.4022 57.9508L62.3523 58.5168H48.0047L39.9549 57.9508L36.9363 60.8936L46.3276 61.4596H54.3114C54.2515 61.8992 54.5805 62.1055 54.5805 62.1055H55.3337C55.6351 61.9582 55.6905 61.7111 55.6424 61.4596H64.0293L73.421 60.8936L70.4022 57.9508Z" fill="#900000"/>
            <path d="M51.2269 47.8773L41.0779 57.4409L47.9565 57.9128H62.4003L69.2792 57.4409L59.1299 47.8773H58.1149H55.2867H55.0701H52.2419H51.2269Z" fill="#900000"/>
            <path d="M52.5259 47.0171V47.2659H57.8312V47.0171C57.8312 46.3378 57.2817 45.7871 56.6037 45.7871H53.7534C53.0755 45.7871 52.5259 46.3378 52.5259 47.0171Z" fill="#900000"/>
            <path d="M53.9709 45.1017V45.1918C53.9709 45.3884 54.1298 45.5476 54.326 45.5476H56.1122C56.3084 45.5476 56.4673 45.3884 56.4673 45.1918V45.1017C56.4673 44.9051 56.3084 44.7459 56.1122 44.7459H54.326C54.1298 44.7459 53.9709 44.9051 53.9709 45.1017Z" fill="#900000"/>
            <path d="M54.6389 44.5017H55.7301C56.9034 44.0139 55.5119 42.6428 55.5119 42.6428H54.9663C53.5476 43.921 54.6389 44.5017 54.6389 44.5017Z" fill="#900000"/>
            <path d="M51.9011 38.4797V38.6038H58.3379V38.4797C58.3379 37.7313 57.7323 37.125 56.986 37.125H53.253C52.5067 37.125 51.9011 37.7313 51.9011 38.4797Z" fill="#900000"/>
            <path d="M53.6543 36.4756V36.4932C53.6543 36.7096 53.829 36.8853 54.0456 36.8853H56.292C56.508 36.8853 56.6833 36.7096 56.6833 36.4932V36.4756C56.6833 36.2592 56.508 36.0836 56.292 36.0836H54.0456C53.829 36.0836 53.6543 36.2592 53.6543 36.4756Z" fill="#900000"/>
            <path d="M54.4645 35.8394H55.7887C57.2119 35.3515 55.5235 33.9805 55.5235 33.9805H54.8614C53.1403 35.2586 54.4645 35.8394 54.4645 35.8394Z" fill="#900000"/>
            <path d="M50.6486 40.4353H49.2848L48.6883 42.3033H46.5568L45.5339 44.2557H44.0848L42.8914 46.2081H41.1012L40.2487 48.1604H38.1176L37.6062 50.0278H35.9013L34.5374 52.2346L44.7667 52.1502C45.0224 51.9802 50.3076 46.8868 50.3076 46.8868H51.5516C51.6686 46.2783 51.9553 45.2636 52.6095 44.8778C52.6095 44.8778 53.6267 41.4823 55.2082 41.2563C56.7896 41.0296 57.6367 44.199 57.6932 44.5384C57.6932 44.5384 58.5775 45.5202 58.8936 46.8018H59.77C59.77 46.8018 65.055 51.8952 65.3106 52.0652L75.5402 52.1502L74.1759 49.9429H72.4711L71.96 48.0755H69.8289L68.9762 46.1231H67.1861L65.9925 44.1707H64.5433L63.5204 42.2183H61.3894L60.7928 40.3503H59.429L58.9173 39.1623L51.1603 39.2472L50.6486 40.4353Z" fill="#900000"/>
            <path d="M51.4695 36.5591C52.0344 35.8044 52.9006 35.6157 52.9006 35.6157C52.9006 35.6157 53.0041 32.8809 55.0373 32.711C55.0373 32.711 57.0514 32.4186 57.381 35.465C57.381 35.465 59.3391 36.4458 59.5274 38.3137H71.2848L69.7598 36.7857H68.1501L67.4727 35.3426H65.9477L65.4394 33.984H63.3213L62.813 32.3716H60.8646L60.4411 31.013H59.0858C59.0858 31.013 57.593 31.013 55.4608 31.013C55.0724 31.013 54.6981 31.013 54.3413 31.013C52.2096 31.013 50.7169 31.013 50.7169 31.013H49.361L48.9375 32.3716H46.9891L46.4809 33.984H44.363L43.8547 35.3426H42.3298L41.6521 36.7857H40.0425L38.5176 38.3137H50.7921C50.9437 37.546 50.8238 37.4225 51.4695 36.5591Z" fill="#900000"/>
            <path d="M51.9011 29.0571V29.1812H58.3379V29.0571C58.3379 28.3092 57.7323 27.7024 56.986 27.7024H53.253C52.5067 27.7024 51.9011 28.3092 51.9011 29.0571Z" fill="#900000"/>
            <path d="M53.6543 27.0533V27.0708C53.6543 27.2873 53.829 27.4629 54.0456 27.4629H56.292C56.508 27.4629 56.6833 27.2873 56.6833 27.0708V27.0533C56.6833 26.8368 56.508 26.6612 56.292 26.6612H54.0456C53.829 26.6612 53.6543 26.8368 53.6543 27.0533Z" fill="#900000"/>
            <path d="M54.4645 26.417H55.7887C57.2119 25.9292 55.5235 24.5581 55.5235 24.5581H54.8614C53.1403 25.8363 54.4645 26.417 54.4645 26.417Z" fill="#900000"/>
            <path d="M50.4038 30.6169H59.8356C59.8356 30.0294 59.3601 29.5529 58.7732 29.5529H51.4657C50.8793 29.5529 50.4038 30.0294 50.4038 30.6169Z" fill="#900000"/>
            <path d="M36.9358 91.0574V92.0449H41.3787V91.0574H36.9358Z" fill="#900000"/>
            <path d="M35.7109 94.4893H41.399V92.491H35.7109V94.4893Z" fill="#900000"/>
            <path d="M46.5139 71.5835H37.9834V72.2498H46.5139V71.5835Z" fill="#900000"/>
            <path d="M46.5276 70.0873H38.6899V71.2686H46.5276V70.0873Z" fill="#900000"/>
            <path d="M45.8033 72.6078H38.5846L35.3614 74.7432H35.355V74.7472L35.3479 74.7517H35.355V75.4939H43.3485L45.8033 73.5749V72.6078Z" fill="#900000"/>
            <path d="M37.8438 69.9405H27.6196V70.4912H37.8438V69.9405Z" fill="#900000"/>
            <path d="M38.6585 68.6273H28.29V69.6799H37.8568L38.6585 68.6273Z" fill="#900000"/>
            <path d="M39.6186 67.4867L36.654 64.0907L33.4912 64.0624L28.3513 68.3071H38.8844L39.6186 67.4867Z" fill="#900000"/>
            <path d="M38.3914 78.8032L38.4179 90.6155H41.3455V80.8683C41.3999 80.057 41.6823 78.4847 43.0076 77.5001V76.0332H37.2476C37.7412 76.5981 38.3145 77.4921 38.3914 78.8032Z" fill="#900000"/>
            <path d="M26.9392 89.3442H31.3821V88.4009H26.9392V89.3442Z" fill="#900000"/>
            <path d="M25.7144 91.6785H31.4024V89.7703H25.7144V91.6785Z" fill="#900000"/>
            <path d="M28.3947 76.6973L28.4213 87.9788H31.3489V78.6695C31.4033 77.895 31.6857 76.3931 33.011 75.4526V74.0514H27.251C27.7446 74.5908 28.3179 75.4446 28.3947 76.6973Z" fill="#900000"/>
            <path d="M12.3521 76.1558V76.6714H14.6591V76.1558H12.3521Z" fill="#900000"/>
            <path d="M11.7161 77.9465H14.6696V76.9041H11.7161V77.9465Z" fill="#900000"/>
            <path d="M24.4647 78.929H21.5498V79.5703H24.4647V78.929Z" fill="#900000"/>
            <path d="M20.7461 81.1567H24.4778V79.8599H20.7461V81.1567Z" fill="#900000"/>
            <path d="M15.5048 69.0822V68.3168H12.5139C12.7702 68.6114 13.0679 69.0783 13.1078 69.7627L13.1216 75.9258H14.6418V70.8397C14.67 70.4165 14.8167 69.5961 15.5048 69.0822Z" fill="#900000"/>
            <path d="M37.8022 71.1552V70.8691H28.1693L25.004 72.8952H24.9977V72.8991L24.9907 72.9037H24.9977V73.6079H35.7915L37.1715 72.6646H37.1711V71.1552H37.8022Z" fill="#900000"/>
            <path d="M14.6299 83.0542H27.0599V82.1755H14.6299V83.0542Z" fill="#900000"/>
            <path d="M27.1091 83.4507H13.2327V85.228H27.1091V83.4507Z" fill="#900000"/>
            <path d="M21.1042 78.1012H11.6943V78.5454H21.1042V78.1012Z" fill="#900000"/>
            <path d="M21.1413 78.7455H10.6365V79.644H21.1413V78.7455Z" fill="#900000"/>
            <path d="M48.8246 68.1796L45.8598 65.2085H42.6971L38.9131 69.481H47.5258L48.8246 68.1796Z" fill="#900000"/>
            <path d="M42.8101 64.7338V64.9587H45.7469V64.7338C45.7469 64.3265 45.4169 63.9956 45.0099 63.9956H43.547C43.14 63.9956 42.8101 64.3265 42.8101 64.7338Z" fill="#900000"/>
            <path d="M43.4172 63.4543C43.4172 63.6339 43.5626 63.7795 43.742 63.7795H44.815C44.9944 63.7795 45.1397 63.6339 45.1397 63.4543C45.1397 63.2742 44.9944 63.1286 44.815 63.1286H43.742C43.5626 63.1286 43.4172 63.2742 43.4172 63.4543Z" fill="#900000"/>
            <path d="M43.8779 62.9309H44.6309C45.4404 62.5349 44.4803 61.4216 44.4803 61.4216H44.1038C43.1249 62.459 43.8779 62.9309 43.8779 62.9309Z" fill="#900000"/>
            <path d="M14.8159 63.0107H20.6707L20.6881 61.8946L19.1449 60.3484H17.174L14.8159 63.0107Z" fill="#900000"/>
            <path d="M17.2444 60.0527V60.1926H19.0745V60.0527C19.0745 59.7983 18.8689 59.5921 18.6153 59.5921H17.7036C17.45 59.5921 17.2444 59.7983 17.2444 60.0527Z" fill="#900000"/>
            <path d="M18.4939 59.4578C18.6057 59.4578 18.6963 59.3671 18.6963 59.2549C18.6963 59.1427 18.6057 59.0521 18.4939 59.0521H17.8252C17.7134 59.0521 17.6228 59.1427 17.6228 59.2549C17.6228 59.3671 17.7134 59.4578 17.8252 59.4578H18.4939Z" fill="#900000"/>
            <path d="M18.0507 57.9882C17.4407 58.6352 17.9099 58.9287 17.9099 58.9287H18.3792C18.8837 58.6823 18.2853 57.9882 18.2853 57.9882H18.0507Z" fill="#900000"/>
            <path d="M26.9955 70.665V69.4673H27.5046V67.9263H20.9632L17.6069 69.9523H17.6001V69.9563L17.5928 69.9608H17.6001V70.665H26.9955Z" fill="#900000"/>
            <path d="M21.5876 78.5845L24.4546 78.5499L24.3982 74.1641V72.6361L26.1773 71.5166V71.1086H20.4172C20.9109 71.648 21.4842 72.5018 21.561 73.7545L21.5876 78.5845Z" fill="#900000"/>
            <path d="M24.1159 59.7899C24.1159 57.9225 27.5046 57.8375 27.5046 57.8375C31.4016 57.7525 31.6557 59.6199 31.6557 59.6199V63.5252H24.1159V59.7899ZM31.6557 64.289L34.5361 62.0816V59.1955C34.9596 58.0074 37.9671 58.0499 37.9671 58.0499L38.6024 57.4131H20.1343C21.0662 57.4981 21.1509 59.1955 21.1509 59.1955V67.175C21.0662 67.0901 28.5212 67.175 28.5212 67.175L31.6557 64.289Z" fill="#900000"/>
            <path d="M19.8284 67.9485L20.6142 67.3451L20.5954 65.2227H14.3829L10.8883 67.2391H10.8805V67.2431L10.8718 67.2476H10.8805V67.9485H19.8284Z" fill="#900000"/>
            <path d="M14.2722 64.9263H20.6708V64.4651H14.2722V64.9263Z" fill="#900000"/>
            <path d="M8.24574 64.1819H2.33667V64.6431H8.24574V64.1819Z" fill="#900000"/>
            <path d="M14.7542 64.1338H20.6707V63.2516H14.7542V64.1338Z" fill="#900000"/>
            <path d="M10.2789 60.0449C10.3354 57.2716 12.0297 57.3282 12.0297 57.3282C13.8653 57.3849 13.6958 60.3843 13.6958 60.3843V62.365H10.2789V60.0449ZM8.76758 62.365V64.0205H14.2624V63.016L15.2489 61.8273L15.3054 59.9599C15.9267 59.8183 16.2529 59.5101 16.6044 58.4036C16.8021 57.7809 17.2395 57.76 17.5363 57.6115C17.9316 57.4132 17.9316 56.7906 17.9316 56.7906H8.76758V62.365Z" fill="#900000"/>
            <path d="M0.719707 66.7693H5.67593V66.3546C5.67593 66.3546 7.02842 65.4594 7.98969 64.8554H2.29667L0.724117 66.2713H0.719707V66.2741L0.714844 66.2775H0.719707V66.7693Z" fill="#900000"/>
            <path d="M8.26447 63.8176V60.8936H6.00538L2.42851 63.8363C2.40968 63.855 8.26447 63.8176 8.26447 63.8176Z" fill="#900000"/>
            <path d="M8.27596 60.5983C8.27596 60.361 8.08344 60.1678 7.84596 60.1678H6.87575C6.63833 60.1678 6.4458 60.361 6.4458 60.5983V60.6941H8.27596V60.5983Z" fill="#900000"/>
            <path d="M6.9999 60.0498H7.72205C7.81908 60.0498 7.89768 59.971 7.89768 59.8736V59.8702C7.89768 59.7733 7.81908 59.694 7.72205 59.694H6.9999C6.90287 59.694 6.82422 59.7733 6.82422 59.8702V59.8736C6.82422 59.971 6.90287 60.0498 6.9999 60.0498Z" fill="#900000"/>
            <path d="M7.11132 59.5859H7.58062C8.08509 59.3701 7.48676 58.7621 7.48676 58.7621H7.25211C6.64207 59.3287 7.11132 59.5859 7.11132 59.5859Z" fill="#900000"/>
            <path d="M8.39631 70.2878V76.0979H9.90237C9.90237 76.0979 9.82711 70.8912 9.90237 69.9858C9.97769 69.0804 11.2202 68.4011 11.2202 68.4011H10.2412V68.0997V67.4583H5.57247V67.081H1.35571C1.35894 67.1088 1.39309 67.7598 1.39309 67.7598C1.80726 68.2124 1.95789 69.307 1.95789 69.307V76.0599H3.42629V70.5518C3.53926 69.0804 4.55584 68.0238 5.87367 68.0617C8.21198 68.1286 8.39631 70.2878 8.39631 70.2878Z" fill="#900000"/>
            <path d="M1.35547 67.0811H1.35572C1.35553 67.0791 1.35547 67.0791 1.35547 67.0811Z" fill="#900000"/>
            <path d="M3.44117 76.334H0.743652V76.8496H3.44117V76.334Z" fill="#900000"/>
            <path d="M0 78.125H3.45349V77.0825H0V78.125Z" fill="#900000"/>
            <path d="M8.32104 76.9473H11.1696V76.4317H8.32104V76.9473Z" fill="#900000"/>
            <path d="M11.1826 77.1799H7.53564V78.2224H11.1826V77.1799Z" fill="#900000"/>
            <path d="M28.9757 56.2851H28.971V56.2885L28.9658 56.2925H28.971V56.9038H39.8301C40.7656 56.1503 41.788 55.3033 42.7149 54.5271H31.3418L28.9757 56.2851Z" fill="#900000"/>
            <path d="M18.3016 56.1158H18.297V56.1192L18.2917 56.1226H18.297V56.7339H27.6756L30.2673 54.3571H20.6677L18.3016 56.1158Z" fill="#900000"/>
            <path d="M6.92224 56.3096H17.2882L19.7107 54.1872H8.64317L6.92569 55.7572H6.92224V55.7606L6.91846 55.764H6.92224V56.3096Z" fill="#900000"/>
            <path d="M20.1535 52.8318H9.12109V53.7627H20.1535V52.8318Z" fill="#900000"/>
            <path d="M20.8403 53.8477H31.0323V52.7831H20.8403V53.8477Z" fill="#900000"/>
            <path d="M31.7969 54.0552H43.0604L44.3063 53.0178V52.9906H31.7969V54.0552Z" fill="#900000"/>
            <path d="M33.4167 44.3238H33.4129V44.3267L33.4087 44.3301H33.4129V44.8213H43.0359C43.4877 44.2819 43.563 44.1187 43.6918 43.8729C43.7586 43.7448 44.7042 43.7114 44.8432 43.7114C44.9938 43.7114 45.1625 43.1816 45.4079 42.9777L35.3372 42.9097L33.4167 44.3238Z" fill="#900000"/>
            <path d="M46.1232 41.7856L45.8597 41.7657H35.7063V42.5583H45.5961L46.1232 41.7856Z" fill="#900000"/>
            <path d="M34.8465 42.5566L34.0918 42.5436H27.3193V43.0535H34.0699L34.8465 42.5566Z" fill="#900000"/>
            <path d="M25.8102 48.2732L22.7039 45.8398L17.3386 45.7837C17.3386 45.7837 9.63373 52.1898 9.38184 52.2913H21.5744L25.8102 48.2732Z" fill="#900000"/>
            <path d="M21.6026 45.2535C21.6026 44.8733 21.2952 44.5657 20.916 44.5657H19.3524C18.9732 44.5657 18.6658 44.8733 18.6658 45.2535V45.4014H21.6026V45.2535Z" fill="#900000"/>
            <path d="M19.5548 44.3782H20.7136C20.8693 44.3782 20.9955 44.2518 20.9955 44.0955C20.9955 43.9397 20.8693 43.8133 20.7136 43.8133H19.5548C19.3992 43.8133 19.2729 43.9397 19.2729 44.0955C19.2729 44.2518 19.3992 44.3782 19.5548 44.3782Z" fill="#900000"/>
            <path d="M19.7337 43.6411H20.4867C21.2961 43.2978 20.3361 42.3318 20.3361 42.3318H19.9595C18.9806 43.232 19.7337 43.6411 19.7337 43.6411Z" fill="#900000"/>
            <path d="M27.1938 47.901V48.0046H30.1307V47.901C30.1307 47.5389 29.8378 47.2454 29.4765 47.2454H27.848C27.4867 47.2454 27.1938 47.5389 27.1938 47.901Z" fill="#900000"/>
            <path d="M27.801 46.8196C27.801 46.9612 27.9156 47.0757 28.0569 47.0757H29.2677C29.409 47.0757 29.5236 46.9612 29.5236 46.8196C29.5236 46.678 29.409 46.5629 29.2677 46.5629H28.0569C27.9156 46.5629 27.801 46.678 27.801 46.8196Z" fill="#900000"/>
            <path d="M28.2619 46.407H29.015C29.8245 46.0948 28.8644 45.2178 28.8644 45.2178H28.4879C27.5089 46.0353 28.2619 46.407 28.2619 46.407Z" fill="#900000"/>
            <path d="M34.1125 38.1307C34.1125 37.8621 33.8954 37.6451 33.6276 37.6451H31.991C31.7232 37.6451 31.5061 37.8621 31.5061 38.1307V38.1567H34.1125V38.1307Z" fill="#900000"/>
            <path d="M32.2087 37.53H33.4098C33.5003 37.53 33.5737 37.4564 33.5737 37.3657V37.3482C33.5737 37.2575 33.5003 37.1839 33.4098 37.1839H32.2087C32.1183 37.1839 32.0449 37.2575 32.0449 37.3482V37.3657C32.0449 37.4564 32.1183 37.53 32.2087 37.53Z" fill="#900000"/>
            <path d="M32.4537 37.0786H33.122C33.8404 36.8679 32.9884 36.2764 32.9884 36.2764H32.6542C31.7854 36.8276 32.4537 37.0786 32.4537 37.0786Z" fill="#900000"/>
            <path d="M22.5442 52.2346H31.5986L33.8183 51.2159L34.1688 50.1412L30.7224 48.3865H26.5444C26.5444 48.3865 22.7719 52.1695 22.5442 52.2346Z" fill="#900000"/>
            <path d="M49.0223 39.5867H36.1455V41.3691H48.2274L49.0223 39.5867Z" fill="#900000"/>
            <path d="M33.8017 43.3221H27.335C27.335 43.3221 26.1772 44.3289 25.6406 44.7651H32.1356L33.8017 43.3221Z" fill="#900000"/>
            <path d="M35.3173 40.6902H28.0129V42.2183H35.3173V40.6902Z" fill="#900000"/>
            <path d="M28.1494 40.3149H28.1257C28.1293 40.3181 28.1382 40.3176 28.1494 40.3149Z" fill="#900000"/>
            <path d="M35.3999 39.3884L34.4363 38.4904H30.9857C30.9857 38.4904 28.4375 40.2507 28.1509 40.3147H35.5243L35.3999 39.3884Z" fill="#900000"/>
            <path d="M36.7385 49.1791L37.4162 47.3961L39.4494 47.3112L40.3813 45.5287L33.9429 45.6137C33.9429 47.5661 33.9429 49.0941 33.9429 49.0941L34.79 50.2822L35.1289 49.1791H36.7385Z" fill="#900000"/>
            <path d="M32.9829 46.2926L33.0206 45.5759C33.0206 45.5759 30.2197 45.5759 30.1497 45.5759L30.8274 47.2739C30.8274 47.2739 31.2886 46.2082 32.9829 46.2926Z" fill="#900000"/>
            <path d="M41.4826 65.902C41.7368 63.2703 42.5839 62.0817 42.5839 62.0817L39.28 61.9123C39.873 62.4216 40.1271 63.6947 40.1271 63.6947V66.7507L41.4826 65.902Z" fill="#900000"/>
            <path d="M51.6489 62.1382H46.8479C48.3446 63.2136 48.7121 64.5999 48.7121 64.5999L48.8529 67.4299L49.9543 66.7506L50.124 64.7132C50.2088 63.1852 51.6489 62.1382 51.6489 62.1382Z" fill="#900000"/>
            <path d="M68.8926 92.0449H73.3357V91.0574H68.8926V92.0449Z" fill="#900000"/>
            <path d="M68.8728 94.4893H74.5604V92.491H68.8728V94.4893Z" fill="#900000"/>
            <path d="M72.2879 71.5835H63.7573V72.2498H72.2879V71.5835Z" fill="#900000"/>
            <path d="M71.5818 70.0873H63.7439V71.2686H71.5818V70.0873Z" fill="#900000"/>
            <path d="M74.9165 74.7432H74.9103L71.6868 72.6078H64.468V73.5749L66.9231 75.4939H74.9165V74.7517H74.9233L74.9165 74.7472V74.7432Z" fill="#900000"/>
            <path d="M82.6511 69.9405H72.4272V70.4912H82.6511V69.9405Z" fill="#900000"/>
            <path d="M81.9815 69.6799V68.6273H71.6128L72.4146 69.6799H81.9815Z" fill="#900000"/>
            <path d="M76.7803 64.0624L73.6173 64.0907L70.6528 67.4867L71.3873 68.3071H81.92L76.7803 64.0624Z" fill="#900000"/>
            <path d="M68.926 90.6155H71.8538L71.8804 78.8032C71.9567 77.4921 72.53 76.5981 73.0236 76.0332H67.2637V77.5001C68.589 78.4847 68.8717 80.057 68.926 80.8683V90.6155Z" fill="#900000"/>
            <path d="M78.8892 89.3442H83.3323V88.4009H78.8892V89.3442Z" fill="#900000"/>
            <path d="M78.8691 91.6785H84.5571V89.7703H78.8691V91.6785Z" fill="#900000"/>
            <path d="M78.9223 87.979H81.8496L81.8763 76.6976C81.9531 75.4449 82.5261 74.5911 83.0199 74.0517H77.2598V75.4528C78.5854 76.3933 78.8677 77.8953 78.9223 78.6698V87.979Z" fill="#900000"/>
            <path d="M95.6125 76.6714H97.9192V76.1558H95.6125V76.6714Z" fill="#900000"/>
            <path d="M95.6016 77.9468H98.5549V76.9043H95.6016V77.9468Z" fill="#900000"/>
            <path d="M85.8066 79.5703H88.7213V78.929H85.8066V79.5703Z" fill="#900000"/>
            <path d="M85.7939 81.1567H89.5257V79.8598H85.7939V81.1567Z" fill="#900000"/>
            <path d="M94.7668 69.082C95.4546 69.5959 95.6016 70.4163 95.63 70.8395V75.9255H97.1498L97.1643 69.7624C97.2039 69.078 97.502 68.6112 97.7578 68.3166H94.7668V69.082Z" fill="#900000"/>
            <path d="M73.1001 72.6646L74.4803 73.6079H85.2732V72.9037H85.2807L85.2732 72.8991V72.8951H85.2673L82.102 70.8691H72.4695V71.1552H73.1007V72.6646H73.1001Z" fill="#900000"/>
            <path d="M95.6417 82.1755H83.2114V83.0542H95.6417V82.1755Z" fill="#900000"/>
            <path d="M83.1621 85.228H97.0389V83.4507H83.1621V85.228Z" fill="#900000"/>
            <path d="M98.5772 78.1012H89.1672V78.5454H98.5772V78.1012Z" fill="#900000"/>
            <path d="M89.1301 79.644H99.6343V78.7455H89.1301V79.644Z" fill="#900000"/>
            <path d="M67.5746 65.2085H64.4116L61.4465 68.1796L62.7459 69.481H71.3584L67.5746 65.2085Z" fill="#900000"/>
            <path d="M64.5247 64.7338V64.9587H67.4615V64.7338C67.4615 64.3265 67.1313 63.9956 66.7247 63.9956H65.2614C64.8549 63.9956 64.5247 64.3265 64.5247 64.7338Z" fill="#900000"/>
            <path d="M65.1318 63.4543C65.1318 63.6339 65.2771 63.7795 65.4564 63.7795H66.5296C66.7088 63.7795 66.8541 63.6339 66.8541 63.4543C66.8541 63.2742 66.7088 63.1286 66.5296 63.1286H65.4564C65.2771 63.1286 65.1318 63.2742 65.1318 63.4543Z" fill="#900000"/>
            <path d="M65.6402 62.9309H66.3933C66.3933 62.9309 67.1465 62.459 66.1677 61.4216H65.7911C65.7911 61.4216 64.831 62.5349 65.6402 62.9309Z" fill="#900000"/>
            <path d="M89.583 61.8947L89.6004 63.0107H95.4555L93.0971 60.3485H91.1265L89.583 61.8947Z" fill="#900000"/>
            <path d="M91.1965 60.0529V60.1929H93.0271V60.0529C93.0271 59.7985 92.8216 59.5923 92.5682 59.5923H91.6561C91.4027 59.5923 91.1965 59.7985 91.1965 60.0529Z" fill="#900000"/>
            <path d="M92.4469 59.4578C92.5587 59.4578 92.6491 59.3671 92.6491 59.2549C92.6491 59.1427 92.5587 59.0521 92.4469 59.0521H91.7781C91.6656 59.0521 91.5752 59.1427 91.5752 59.2549C91.5752 59.3671 91.6656 59.4578 91.7781 59.4578H92.4469Z" fill="#900000"/>
            <path d="M91.9857 57.9882C91.9857 57.9882 91.388 58.6822 91.892 58.9287H92.3613C92.3613 58.9287 92.8307 58.6352 92.2204 57.9882H91.9857Z" fill="#900000"/>
            <path d="M92.6642 69.9523L89.3082 67.9263H82.7666V69.4673H83.2755V70.665H92.6711V69.9608H92.6786L92.6711 69.9562V69.9523H92.6642Z" fill="#900000"/>
            <path d="M84.0938 71.1086V71.5165L85.8733 72.6361V74.1641L85.8165 78.5499L88.6834 78.5845L88.7102 73.7545C88.7866 72.5018 89.3602 71.648 89.8538 71.1086H84.0938Z" fill="#900000"/>
            <path d="M86.1552 63.5255H78.615V59.6202C78.615 59.6202 78.8693 57.7528 82.7662 57.8378C82.7662 57.8378 86.1552 57.9228 86.1552 59.7902V63.5255ZM89.1203 67.1753V59.1958C89.1203 59.1958 89.2048 57.4984 90.1366 57.4134H71.6685L72.3037 58.0502C72.3037 58.0502 75.3111 58.0077 75.7351 59.1958V62.0819L78.615 64.2892L81.7498 67.1753C81.7498 67.1753 89.2048 67.0903 89.1203 67.1753Z" fill="#900000"/>
            <path d="M99.3905 67.2476H99.3992L99.3905 67.2431V67.2392H99.3825L95.8886 65.2227H89.6755L89.6567 67.3451L90.4427 67.9485H99.3905V67.2476Z" fill="#900000"/>
            <path d="M95.9993 64.4653H89.6003V64.9265H95.9993V64.4653Z" fill="#900000"/>
            <path d="M102.026 64.6428H107.935V64.1817H102.026V64.6428Z" fill="#900000"/>
            <path d="M89.6008 64.1338H95.5174V63.2516H89.6008V64.1338Z" fill="#900000"/>
            <path d="M98.2419 57.3279C98.2419 57.3279 99.9362 57.2713 99.9928 60.0446V62.3647H96.5762V60.384C96.5762 60.384 96.4063 57.3846 98.2419 57.3279ZM92.7359 57.6113C93.0327 57.7597 93.4694 57.7806 93.6673 58.4033C94.0187 59.5098 94.3449 59.818 94.9665 59.9597L95.0225 61.8271L96.0092 63.0157V64.0203H101.504V62.3647V56.7903H92.3401C92.3401 56.7903 92.3401 57.4129 92.7359 57.6113Z" fill="#900000"/>
            <path d="M104.595 66.3546V66.7693H109.552V66.2775H109.557L109.552 66.2741V66.2713H109.547L107.975 64.8554H102.281C103.243 65.4594 104.595 66.3546 104.595 66.3546Z" fill="#900000"/>
            <path d="M102.007 63.8174C102.007 63.8174 107.862 63.8547 107.843 63.8361L104.266 60.8933H102.007V63.8174Z" fill="#900000"/>
            <path d="M102.426 60.1675C102.188 60.1675 101.996 60.3607 101.996 60.5981V60.6938H103.826V60.5981C103.826 60.3607 103.634 60.1675 103.396 60.1675H102.426Z" fill="#900000"/>
            <path d="M102.549 59.6943C102.452 59.6943 102.373 59.7736 102.373 59.8704V59.8738C102.373 59.9713 102.452 60.05 102.549 60.05H103.271C103.369 60.05 103.447 59.9713 103.447 59.8738V59.8704C103.447 59.7736 103.369 59.6943 103.271 59.6943H102.549Z" fill="#900000"/>
            <path d="M102.691 59.5857H103.16C103.16 59.5857 103.63 59.3285 103.02 58.7619H102.785C102.785 58.7619 102.187 59.3698 102.691 59.5857Z" fill="#900000"/>
            <path d="M108.915 67.0811H108.916C108.916 67.0792 108.916 67.0792 108.915 67.0811Z" fill="#900000"/>
            <path d="M106.845 76.06H108.313V69.3071C108.313 69.3071 108.464 68.2125 108.878 67.7598C108.878 67.7598 108.912 67.1088 108.915 67.0811H104.699V67.4584H100.03V68.0997V68.4012H99.051C99.051 68.4012 100.293 69.0804 100.369 69.9859C100.444 70.8912 100.369 76.0979 100.369 76.0979H101.875V70.2878C101.875 70.2878 102.06 68.1286 104.398 68.0617C105.716 68.0238 106.733 69.0804 106.845 70.5518V76.06Z" fill="#900000"/>
            <path d="M106.831 76.8496H109.528V76.334H106.831V76.8496Z" fill="#900000"/>
            <path d="M106.818 77.0827V78.1252H110.271V77.0827H106.818Z" fill="#900000"/>
            <path d="M99.1018 76.4317V76.9473H101.95V76.4317H99.1018Z" fill="#900000"/>
            <path d="M99.0886 78.2227H102.736V77.1802H99.0886V78.2227Z" fill="#900000"/>
            <path d="M81.2956 56.2851L78.9293 54.5271H67.5564C68.4831 55.3033 69.5054 56.1503 70.4412 56.9038H81.3001V56.2925H81.3052L81.3001 56.2885V56.2851H81.2956Z" fill="#900000"/>
            <path d="M91.9702 56.1157L89.6042 54.3571H80.0044L82.5956 56.7339H91.9752V56.1225H91.9802L91.9752 56.1191V56.1157H91.9702Z" fill="#900000"/>
            <path d="M92.9828 56.3093H103.349V55.7637H103.353L103.349 55.7603V55.7569H103.345L101.628 54.187H90.561L92.9828 56.3093Z" fill="#900000"/>
            <path d="M90.1177 53.7627H101.15V52.8319H90.1177V53.7627Z" fill="#900000"/>
            <path d="M79.2388 53.8479H89.4307V52.7832H79.2388V53.8479Z" fill="#900000"/>
            <path d="M65.9653 53.0178L67.211 54.0552H78.4748V52.9906H65.9653V53.0178Z" fill="#900000"/>
            <path d="M76.8548 44.3238L74.934 42.9097L64.8633 42.9777C65.1087 43.1816 65.2777 43.7114 65.4281 43.7114C65.5672 43.7114 66.5126 43.7448 66.5793 43.8729C66.7083 44.1187 66.7835 44.2819 67.2352 44.8213H76.8587V44.3301H76.8627L76.8587 44.3267V44.3238H76.8548Z" fill="#900000"/>
            <path d="M64.1482 41.7856L64.6752 42.5583H74.565V41.7657H64.4117L64.1482 41.7856Z" fill="#900000"/>
            <path d="M75.4248 42.5566L76.2014 43.054H82.9518V42.5435H76.1798L75.4248 42.5566Z" fill="#900000"/>
            <path d="M88.6974 52.2913H100.89C100.638 52.1899 92.9332 45.7833 92.9332 45.7833L87.5675 45.8397L84.4609 48.2732L88.6974 52.2913Z" fill="#900000"/>
            <path d="M91.6058 45.2531C91.6058 44.8732 91.2981 44.5654 90.9195 44.5654H89.3555C88.9763 44.5654 88.6692 44.8732 88.6692 45.2531V45.4014H91.6058V45.2531Z" fill="#900000"/>
            <path d="M89.5575 44.3779H90.7167C90.8724 44.3779 90.9985 44.2516 90.9985 44.0956C90.9985 43.9396 90.8724 43.8133 90.7167 43.8133H89.5575C89.4024 43.8133 89.2764 43.9396 89.2764 44.0956C89.2764 44.2516 89.4024 44.3779 89.5575 44.3779Z" fill="#900000"/>
            <path d="M89.7842 43.6414H90.5378C90.5378 43.6414 91.2907 43.2321 90.3122 42.3311H89.9354C89.9354 42.3311 88.9755 43.2973 89.7842 43.6414Z" fill="#900000"/>
            <path d="M80.1406 47.9014V48.0046H83.0771V47.9014C83.0771 47.5391 82.7845 47.2459 82.423 47.2459H80.7948C80.4332 47.2459 80.1406 47.5391 80.1406 47.9014Z" fill="#900000"/>
            <path d="M80.7473 46.8198C80.7473 46.9614 80.8621 47.0759 81.0035 47.0759H82.2139C82.3553 47.0759 82.4695 46.9614 82.4695 46.8198C82.4695 46.6781 82.3553 46.563 82.2139 46.563H81.0035C80.8621 46.563 80.7473 46.6781 80.7473 46.8198Z" fill="#900000"/>
            <path d="M81.2567 46.4062H82.0102C82.0102 46.4062 82.7626 46.035 81.7838 45.2174H81.4071C81.4071 45.2174 80.4471 46.0941 81.2567 46.4062Z" fill="#900000"/>
            <path d="M78.7653 38.1307C78.7653 37.8621 78.5482 37.6451 78.2802 37.6451H76.6438C76.3758 37.6451 76.1587 37.8621 76.1587 38.1307V38.1567H78.7653V38.1307Z" fill="#900000"/>
            <path d="M76.8617 37.53H78.0627C78.1532 37.53 78.2267 37.4564 78.2267 37.3657V37.3482C78.2267 37.2575 78.1532 37.1839 78.0627 37.1839H76.8617C76.7713 37.1839 76.6978 37.2575 76.6978 37.3482V37.3657C76.6978 37.4564 76.7713 37.53 76.8617 37.53Z" fill="#900000"/>
            <path d="M77.1495 37.0786H77.8178C77.8178 37.0786 78.4861 36.8276 77.6171 36.2764H77.2829C77.2829 36.2764 76.4308 36.8679 77.1495 37.0786Z" fill="#900000"/>
            <path d="M76.4529 51.2162L78.6727 52.2346H87.7276C87.4999 52.1693 83.7275 48.3863 83.7275 48.3863H79.5491L76.1025 50.1409L76.4529 51.2162Z" fill="#900000"/>
            <path d="M62.0437 41.3691H74.1257V39.5867H61.2493L62.0437 41.3691Z" fill="#900000"/>
            <path d="M76.4702 43.3216L78.1356 44.7646H84.6308C84.0942 44.3285 82.9365 43.3216 82.9365 43.3216H76.4702Z" fill="#900000"/>
            <path d="M74.9543 42.2183H82.2585V40.6902H74.9543V42.2183Z" fill="#900000"/>
            <path d="M79.2857 38.4904H75.8349L74.8715 39.3884L74.7471 40.3147H82.1208C81.8341 40.2507 79.2857 38.4904 79.2857 38.4904Z" fill="#900000"/>
            <path d="M82.1441 40.3149H82.1206C82.1318 40.3176 82.1409 40.3181 82.1441 40.3149Z" fill="#900000"/>
            <path d="M69.8899 45.5287L70.8217 47.3112L72.855 47.3961L73.5329 49.1791H75.1421L75.4814 50.2822L76.3284 49.0941C76.3284 49.0941 76.3284 47.5661 76.3284 45.6137L69.8899 45.5287Z" fill="#900000"/>
            <path d="M79.444 47.2739L80.122 45.5759C80.0518 45.5759 77.2507 45.5759 77.2507 45.5759L77.2886 46.2926C78.9832 46.2082 79.444 47.2739 79.444 47.2739Z" fill="#900000"/>
            <path d="M70.1445 66.7507V63.6947C70.1445 63.6947 70.3984 62.4216 70.9915 61.9123L67.6877 62.0817C67.6877 62.0817 68.5347 63.2703 68.7886 65.902L70.1445 66.7507Z" fill="#900000"/>
            <path d="M63.4232 62.1382H58.6228C58.6228 62.1382 60.0629 63.1852 60.1478 64.7132L60.3174 66.7506L61.4183 67.4299L61.5596 64.5999C61.5596 64.5999 61.9266 63.2136 63.4232 62.1382Z" fill="#900000"/>
            <path d="M48.2887 31.6069L49.0163 30.0538L49.8414 29.7958C49.8414 29.7958 50.3299 28.9186 50.9145 28.8054C51.2164 28.7474 51.4794 26.9097 52.5243 26.8818C53.0942 26.8664 53.1773 25.7256 53.5127 25.1273C53.9899 24.2759 54.6995 23.8118 55.1224 23.7692C55.9977 23.8824 56.5626 24.6177 56.8447 25.4383C56.9148 25.6425 56.9725 25.8004 57.2682 26.542C57.4378 26.9663 59.0476 27.2187 59.0476 28.5509C59.0476 28.7208 60.1164 28.9815 60.2901 29.8525C60.3466 30.1356 61.1376 30.6451 61.1376 30.6451L61.4481 31.5223L62.9444 31.5503L64.2719 32.2039C61.9336 18.0563 58.1927 11.0385 58.1927 11.0385H55.0947H55.0365H51.9385C51.9385 11.0385 51.7491 11.395 51.4296 12.1051V4.82866C51.9063 3.99337 53.3854 2.64082 53.6291 2.84422C53.9096 3.07839 53.5121 3.899 54.635 4.20445C55.7585 4.50921 56.1096 3.43068 56.6943 3.21958C57.2795 3.00849 57.4469 3.8291 58.4731 3.66484C59.0578 3.57118 58.9407 3.00849 58.9407 3.00849C58.6134 3.80533 57.2326 2.7974 56.5072 2.37521C55.7817 1.95302 55.8055 3.19581 54.5186 2.79739C53.2311 2.39897 54.7521 0.991907 52.9037 0.757046C52.0798 0.652897 51.6518 0.832533 51.4296 1.0639V0.978621H50.9382V1.2729V13.2466C49.665 16.3263 47.4417 22.6333 45.8599 32.2039L46.9893 31.579L48.2887 31.6069Z" fill="#900000"/>
            <path d="M53.1743 8.71445V8.89722H57.0696V8.71445C57.0696 8.21594 56.6656 7.81177 56.1681 7.81177H54.0756C53.578 7.81177 53.1743 8.21594 53.1743 8.71445Z" fill="#900000"/>
            <path d="M54.2351 7.3085V7.37447C54.2351 7.51896 54.3522 7.63574 54.4958 7.63574H55.8076C55.9512 7.63574 56.0682 7.51896 56.0682 7.37447V7.3085C56.0682 7.16401 55.9512 7.04723 55.8076 7.04723H54.4958C54.3522 7.04723 54.2351 7.16401 54.2351 7.3085Z" fill="#900000"/>
            <path d="M54.7255 6.86841H55.5267C56.3884 6.5097 55.3666 5.50317 55.3666 5.50317H54.9658C53.9242 6.44144 54.7255 6.86841 54.7255 6.86841Z" fill="#900000"/>
            <path d="M51.7705 9.8738V9.90417C51.7705 10.2376 52.0408 10.5083 52.3744 10.5083H57.8695C58.2028 10.5083 58.473 10.2376 58.473 9.90417V9.8738C58.473 9.53975 58.2028 9.26903 57.8695 9.26903H52.3744C52.0408 9.26903 51.7705 9.53975 51.7705 9.8738Z" fill="#900000"/>
            <path d="M50.9277 0.878906H51.4677C51.5271 0.878906 51.5751 0.830666 51.5751 0.771244V0.743983C51.5751 0.68456 51.5271 0.63632 51.4677 0.63632H50.9277C50.8683 0.63632 50.8203 0.68456 50.8203 0.743983V0.771244C50.8203 0.830666 50.8683 0.878906 50.9277 0.878906Z" fill="#900000"/>
            <path d="M51.0222 0.5625H51.3524C51.7075 0.414871 51.2862 0.000104308 51.2862 0.000104308H51.1211C50.692 0.386751 51.0222 0.5625 51.0222 0.5625Z" fill="#900000"/>
          </g>
          <defs>
            <clipPath id="clip0_250_122147">
              <rect width="110" height="96" fill="white"/>
            </clipPath>
          </defs>
        </svg>
          </div>






        </div>
        <h1 className="text-[#900000] text-[46px] font-[600] ">भारत का बच्चा बच्चा जय श्री राम बोलेगा</h1>
      </div>
    </div>
  )
}
export default function GlbCombiner() {



  const [isFromFile, setIsFromFile] = useState(true);
  const [isMale, setIsMale] = useState(undefined);
  const [steps, setSteps] = useState(0);
  const [modelName, setfirstName] = useState(null);
  const [username, setUsername] = useState(undefined);
  const [warning, setWarning] = useState(null);
  //   const [avatarUrl, setAvatarUrl] = useState("https://models.readyplayer.me/6538eafd0935b38c908a5cda.glb?morphTargets=none&quality=high");
  const [avatarUrl, setAvatarUrl] = useState("");
  const [isFrameOpen, setIsFrameOpen] = useState(false);
  const [file, setFile] = useState(null);
  const [progress, setProgress] = useState(0);
  const [isSafari, setSafari] = useState(false);

  const [flight, setflight] = useState('null')
  const [state, setState] = useState('')

  useEffect(() => {
    const checkBrowser = () => {
      const userAgent = window.navigator.userAgent.toLowerCase();
      if (/safari/.test(userAgent)) {
        if (!/chrome/.test(userAgent)) {
          setSafari(true);
        }
      }
    }
    checkBrowser();
  }, []);


  function avatarUrlSplitter(avatarUrl) {
    const splitUrl = avatarUrl.split("https://models.readyplayer.me/")[1].split(".glb")[0];
    console.log(splitUrl);
    return splitUrl;
    // return "6538eafd0935b38c908a5cda";
  }

  async function combineAndLoadAnimation(avatarUrl) {
    console.log(avatarUrl);
    handleNext();
    const combinedGlbFile = await combineAnimations(avatarUrl, setFile).catch(console.error);
    console.log("combine animations completed and data is", combinedGlbFile);
    // download(avatarUrl.split(".glb")[0].split("/")[avatarUrl.split(".glb")[0].split("/").length - 1] + ".glb", data);
    // instead of download we'll take them to the url while uploading to s3
    // uploadFileToS3(data, "username.glb");
    // console.log()
    // const filed = new File([combinedGlbFile], avatarUrlSplitter(avatarUrl) + ".glb", {
    //   type: "model/gltf-binary",
    // });
    // uploadToprogress(combinedGlbFile, avatarUrlSplitter(avatarUrl), setFile, setProgress);
    uploadFileToS3(combinedGlbFile, avatarUrlSplitter(avatarUrl), setProgress);
  }

  //   async function handleSubmit() {
  //     console.log("handle submit");
  //   }

  //   function uploadToprogress(arrayBuffer, fileName, setFile, setProgress) {
  //     //   const blob = new Blob([arrayBuffer], { type: "application/octet-stream" });
  //     //   setFile(blob);
  //     uploadFileToS3(arrayBuffer, fileName, setProgress);

  //     console.log(fileName);

  //     // const url = URL.createObjectURL(blob);

  //     // const a = document.createElement("a");
  //     // a.href = url;
  //     // console.log(a);
  //     // a.download = "test.glb";
  //     // a.click();
  //   }

  const uploadFileToS3 = async (file, fileName, setProgress) => {
    console.log(fileName);
    console.log(file);
    const params = {
      ACL: "public-read",
      Body: file,
      Bucket: S3_BUCKET,
      Key: "avatars/glb/" + fileName + ".glb",
    };

    await myBucket
      .putObject(params)
      .on("httpUploadProgress", (evt) => {
        console.log("uploaded 100%");
        setProgress(Math.round((evt.loaded / evt.total) * 100));
      })
      .send((err) => {
        if (err) console.log(err);
      });

    // here is something on how to do
    // https://events.news18verse.com/?avatarUrl=hrithikwins&name=3dvideo
  };
  //   function download(filename, data) {
  //     var element = document.createElement("a");
  //     element.href = data;
  //     element.setAttribute("download", filename);

  //     element.style.display = "none";
  //     document.body.appendChild(element);

  //     element.click();

  //     document.body.removeChild(element);
  //   }

  //   async function onAnimationUpload(e) {
  //     setModelName(e.target.files);
  //     setFile;
  //   }
  async function combineAnimations(modelPathName, setFile) {
    const gltfLoader = new GLTFLoader();
    const gltfExporter = new GLTFExporter();
    const group = new Group();

    group.name = gltfName;

    const gltf = await loadGltfFiles(gltfLoader, modelPathName);
    group.add(gltf.scene);

    await loadAnimations(group, isMale ? maleAnimations : femaleAnimations);
    const glbFile = await exportedAnimations(gltfExporter, gltf, group);
    return glbFile;
  }

  async function exportedAnimations(gltfExporter, gltf, group) {
    return new Promise((resolve, reject) => {
      gltfExporter.parse(
        gltf.scene,
        (glb) => {
          //   const blob = new Blob([glb], { type: "application/octet-stream" });
          resolve(glb);
        },
        console.error,
        { binary: true, animations: group.animations }
      );
    });
  }

  async function loadAnimations(group, animations) {
    const gltfLoader = new GLTFLoader();
    for (const [name, path] of Object.entries(animations)) {
      const gltf = await loadGltfFiles(gltfLoader, path);
      gltf.animations[0].name = name;
      group.animations.push(gltf.animations[0]);
    }
  }

  async function loadGltfFiles(gltfLoader, path) {
    return await new Promise((resolve, reject) => {
      gltfLoader.load(path, resolve, undefined, reject);
    });
  }

  function handleNext() {
    
      window.location.replace('http://moonsdemo.world/');
  }

  function takeToTheMetaverse() {
    if (avatarUrl) {
      // window.open("https://metaverse-elections.netlify.app?avatarUrl=" + avatarUrlSplitter(avatarUrl) + "&name=" + username + "&gender=" + (isMale ? "male" : "female"));
      window.open("https://elections.abpverse.com" + "/?avatarUrl=" + avatarUrlSplitter(avatarUrl) + "&name=" + username + (isSafari ? "&browser=safari" : ""));
    }
  }

  useEffect(() => {
    if (avatarUrl != "" && username && username.length > 3 && progress == 100) {
      takeToTheMetaverse();
    }
  }, [avatarUrl]);



  const [loader, setLoader] = useState(true)

  useEffect(() => {
    const timeoutId = setTimeout(() => {
      setLoader(false);
    }, 1500);
    return () => clearTimeout(timeoutId);
  }, [])

  if (loader) {
    return (
      <div className={inter.className}>
        <PreLoader />
      </div>
    )
  }

  return (
    <>

      <div className={inter.className + `bg-hero-bg max-w-8xl bg-[#F0D103] bg-cover bg-no-repeat mx-auto flex flex-row   md:p-0 p-4 justify-center   md:m-0 h-screen lg:h-[100vh] md:w-[100vw] `}>
        <style jsx global>{`
        html {
          font-family: ${inter.style.fontFamily};
        }
      `}</style>
        <img src="/assets/images/flowerLeft.png" className="absolute  z-10 left-10 lg:left-20 h-[200px] lg:h-[400px] top-0" alt="" />
        <img src="/assets/images/flowerRight.png" className="absolute z-10 right-10 lg:right-20  h-[200px] lg:h-[400px] top-0" alt="" />


        <img src="/assets/images/TempleImage1.png" className="hidden lg:block absolute bottom-[0px] h-[60%] z-10 w-full  " alt="" />
        <img src="/assets/images/templeM2.png" className="lg:hidden  absolute  bottom-[0px]   z-10  " alt="" />



       <img src="/assets/images/Sun.png"  className="absolute  bg-cover -z-0 w-screen h-screen" />

        {/* {viewModal ? (
        <>   <NamasteModal isVisible={viewModal} onClose={() => setViewModal(false)} /> </>
      ) : ( */}
        <div className="flex justify-center  z-50 w-full mt-10">
          {/* <div className="w-[450px] md:mr-20  hidden md:block  rounded-4xl justify-center items-center">
            <div className=" md:flex hidden  rounded-4xl h-full flex-col justify-center items-center text-center [border-radius:20px] ">
              <Image priority={true} className="flex pb-4 rounded-2xl" src={`/assets/images/banner.webp`} width={3000} height={3000} alt={"welcome"} />
            </div>
          </div> */}
          <div className="">
            <div className=" flex flex-col  justify-center items-center text-center">
              <Image priority={true} className="flex mb-4 pt-2 " src={`/assets/images/abplogo.png`} width={80} height={80} alt={"welcome"} />
            </div>

            <div className={`z-10 flex  translate-y-20 lg:translate-y-[-20px] flex-col  md:h-fit    lg:scale-100 scale-75 rounded-2xl  p-4 px-6 w-full lg:w-[500px] md:px-12`}>
              {steps == 0 && (
                <div>
                  <div className="flex flex-col w-full   space-y-4  ">
                    <div className="flex items-center justify-center font-bold w-full text-center py-4 text-white ">
                      <h1 className="lg:text-[26px] text-[24px]  text-[#900000] font-[700] ">आपका रामभूमि अयोध्या में स्वागत है</h1>
                    </div>
                    {/* <div className={" pt-5 pl-2"}>{isMale == undefined && <div className="flex  text-white">Please Enter Your Name</div>}</div> */}

                    <div className="bg-white rounded-full p-2 px-3 border-[1px] border-[#900000]">
                      {/* <h1 className="text-transparent text-lg bg-clip-text bg-gradient-to-r pl-2 from-[#dba649] to-custom-orange font-bold pt-px">Enter Your Name </h1> */}
                      <div className="flex flex-row justify-center items-center">
                      <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path fill-rule="evenodd" clip-rule="evenodd" d="M21.6175 9.11382C21.6175 12.7851 18.6739 15.7289 15 15.7289C11.3274 15.7289 8.38252 12.7851 8.38252 9.11382C8.38252 5.44253 11.3274 2.5 15 2.5C18.6739 2.5 21.6175 5.44253 21.6175 9.11382ZM15 27.5C9.57797 27.5 5 26.6187 5 23.2187C5 19.8174 9.60673 18.9674 15 18.9674C20.4233 18.9674 25 19.8487 25 23.2487C25 26.65 20.3933 27.5 15 27.5Z" fill="#900000"/>
                      </svg> 
                        <input
                          type="text"
                          name="username"
                          placeholder={"अपना नाम दर्ज करें"}
                          value={username}
                          onChange={(e) => {
                            setUsername(e.target.value);
                            setWarning("");
                          }}
                          className={"w-full z-50 flex caret-black flex-col rounded-lg bg-white px-4 py-2 hover:border-none hover:outline-none outline-none border-none  placeholder:text-[#90000080] font-medium tracking-wider text-[#900000] text-lg "}
                        />
                      </div>
                    </div>
                    <div className="grid grid-flow-row grid-cols-1 gap-5">
                      <div className="bg-white rounded-full p-2 px-3 border-[1px] border-[#900000]">
                        {/* <h1 className="text-transparent text-lg bg-clip-text bg-gradient-to-r pl-2 from-[#dba649] to-custom-orange font-bold pt-px">Enter Your Name </h1> */}
                        <div className="flex flex-row justify-center items-center">
                          <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clip-path="url(#clip0_246_27753)">
                              <path d="M13.7037 25.9157C27.8459 25.1041 30.4751 5.18714 17.0561 0.714631C13.3429 -0.528088 9.08533 0.037158 5.8368 2.22852H5.83772C4.33218 3.22953 3.0532 4.53502 2.08328 6.06077C1.11337 7.58653 0.474052 9.29865 0.206584 11.0867L0.205772 11.0861C-1.06696 19.0677 5.63028 26.4436 13.7037 25.9157ZM24.1706 17.7184C23.7089 18.8114 23.0884 19.8302 22.3292 20.742C22.2756 20.4224 22.4235 20.0523 22.2031 19.754C21.9641 19.2879 21.7426 18.8124 21.4935 18.3518C21.4008 18.1805 21.4264 18.0821 21.5629 17.9588C23.025 16.6759 21.7216 17.358 21.8652 15.5245C21.8704 15.4749 21.8606 15.425 21.837 15.381C21.8135 15.3371 21.7773 15.3013 21.7332 15.2782C21.0401 14.8357 20.1353 14.6837 19.4191 15.1755C18.5265 15.5973 17.2532 15.2746 16.9645 14.2501C16.7091 13.569 16.7404 12.8813 16.7337 12.1858C16.7749 11.8107 17.2894 11.7478 17.206 11.3142C17.2258 10.7638 17.0464 10.1827 17.567 9.82341C17.6068 9.78821 17.6544 9.76279 17.7058 9.74917C17.7572 9.73555 17.8111 9.73411 17.8632 9.74496C18.3388 9.80248 18.8195 9.69038 19.2207 9.42839C19.6461 9.15869 20.1713 9.33327 20.6425 9.27188C20.8671 9.25588 21.0335 9.32185 21.1718 9.49669C21.4437 9.83997 21.869 9.94077 22.2263 10.1493C22.3465 10.2194 22.411 10.131 22.4674 10.0583C22.7676 9.67102 23.2276 9.54092 23.631 9.31824C23.8506 9.19236 24.2911 9.67295 24.6661 9.69001C25.4133 12.3056 25.2399 15.2172 24.1706 17.7184ZM23.9949 7.88819C23.5471 7.9471 23.8482 7.5217 23.6171 7.29913C23.3851 7.09203 23.1643 6.87257 22.9559 6.64172C22.848 6.52644 22.7781 6.50791 22.6534 6.63105C22.3182 6.96265 22.3371 6.92746 22.7279 7.32371C23.1842 7.82533 23.5281 7.81695 22.7025 8.16551C22.5146 8.25011 22.3372 8.44288 22.1321 8.16434C22.008 7.9958 21.839 7.88256 21.8591 7.62291C21.8899 7.22255 21.5845 6.93229 21.4431 6.58662C21.4009 6.48348 21.3264 6.55615 21.2866 6.60693C20.9893 6.98921 20.5401 7.13699 20.1332 7.34935C19.4305 7.96381 19.5909 7.89688 18.6584 7.87016C18.572 7.87387 18.5466 7.76977 18.5092 7.70893C18.0396 6.94021 18.1306 6.75283 18.6171 6.02711C18.7961 5.91976 19.5867 6.04366 19.7362 6.19977C19.8034 6.26984 19.8585 6.3515 19.9555 6.47368C20.03 6.1761 19.9922 5.94809 19.9999 5.72349C20.126 4.80186 20.9004 5.2172 21.4502 5.01702C21.71 4.81842 21.8166 4.71954 21.7615 4.6221C22.6806 5.58053 23.4352 6.68405 23.9949 7.88819ZM21.6863 4.54496C21.3111 4.30065 20.4775 4.04309 20.4553 3.4394C20.8906 3.77921 21.3019 4.1486 21.6863 4.54496ZM4.42854 4.42816C5.12803 3.72765 5.91065 3.11542 6.75894 2.60511C7.04743 2.75238 7.25324 3.29417 7.61511 3.10165C8.00105 2.89914 8.41238 2.73852 8.68944 2.3764C8.8464 2.18571 9.12108 2.33166 9.32608 2.27382C10.1321 2.16469 10.35 3.08241 10.6515 3.62836C10.6249 3.65075 10.6108 3.67223 10.5993 3.67091C9.89991 3.592 9.25865 3.81655 8.62485 4.06061C8.41664 4.14079 8.25617 4.14759 8.12592 3.94711C7.96494 3.6992 7.75811 3.69204 7.50131 3.79898C7.26345 3.96712 6.40885 3.99617 6.46791 4.33361C6.5259 4.65063 6.2756 5.191 6.84466 5.08299C7.11131 4.99021 7.34054 5.77818 7.50349 5.32516C7.85317 3.90836 9.32735 5.14474 10.464 4.23946C10.8822 3.99134 11.2262 4.80861 11.3887 5.09649C11.5122 5.3666 11.6015 5.68459 12.0357 5.59039C11.7634 5.86278 11.4893 6.13334 11.22 6.40868C11.1419 6.48856 11.0709 6.46297 10.9832 6.4325C10.6447 6.31499 10.3016 6.21053 9.96425 6.08972C9.80333 6.03209 9.72614 6.02645 9.72979 6.24207C10.0052 7.72488 8.74205 6.29478 7.8648 7.40679C6.77016 8.50691 7.61729 9.43011 6.11285 10.5867C6.02292 10.6692 5.94822 10.6792 5.8593 10.6139C5.20574 10.1499 3.73735 9.89786 3.24914 10.6562C3.24214 10.6791 3.24043 10.7032 3.24414 10.7268C3.24786 10.7504 3.25689 10.7729 3.27057 10.7925C3.53205 11.2116 3.55256 11.9167 4.049 11.2137C4.19677 11.0877 4.37034 11.1301 4.52167 11.1553C4.68087 11.1817 4.6018 11.3503 4.59784 11.4484C4.62034 11.8394 5.18279 11.9091 5.07214 12.3492C5.00902 12.6677 5.41014 12.4917 5.5864 12.5451C5.87133 12.5862 6.08751 12.4909 6.27017 12.2683C6.4087 12.0996 7.20389 11.9849 7.387 12.0935C7.53219 12.2398 7.59317 12.4684 7.69733 12.647C7.87044 12.9943 7.8779 13.0014 8.13272 12.7268C8.71823 12.2672 9.54124 12.6309 10.0984 12.95C10.536 13.1952 10.3915 14.0705 11.0435 13.9447C11.1687 13.9151 11.2364 14.0218 11.3051 14.0991C11.7787 14.6785 12.5433 14.6092 12.8234 15.4037C13.0039 15.735 12.9846 16.0254 12.8313 16.3533C12.7223 16.969 12.4195 17.4228 11.7801 17.5952C11.2731 17.7773 12.1284 18.6046 10.9679 18.9344C10.6703 18.9992 10.6318 19.2272 10.6703 19.4945C10.7934 20.183 10.6262 20.7026 9.86899 20.884C9.64504 20.958 9.68495 21.2557 9.57867 21.4255C9.05623 22.3776 9.53114 23.0722 10.1965 23.739C9.61249 23.7735 8.9796 23.8329 8.77775 23.2042C8.52557 22.4718 8.29736 21.733 7.9234 21.0483C7.79782 20.8184 7.87867 20.5512 7.87542 20.3018C7.78426 19.2815 6.74233 18.5178 6.93805 17.4306C7.01391 16.8861 6.23726 17.6637 5.43314 16.6727C5.16512 16.3547 4.54147 15.5863 4.64918 15.188C4.86932 14.6393 4.89253 13.9774 5.40074 13.5965C5.61722 13.4282 5.63693 12.9034 5.23317 13.0052C4.19601 13.1787 4.41762 12.3994 3.81017 12.5474C3.39885 12.5911 3.10193 12.4563 2.78226 12.1685C1.82321 11.2865 1.54828 11.94 0.998772 11.2861C1.36754 8.68848 2.57137 6.28137 4.42854 4.42816Z" fill="#900000" />
                            </g>
                            <defs>
                              <clipPath id="clip0_246_27753">
                                <rect width="26" height="26" fill="white" />
                              </clipPath>
                            </defs>
                          </svg>
                          <input
                            type="text"
                            name="username"
                            placeholder={"अपनी उड़ान का नाम ढूंढें"}
                            onChange={(e) => {
                              setflight(e.target.value);
                              setWarning("");
                            }}
                            className={"w-full z-50 flex caret-black flex-col rounded-lg bg-white px-4 py-2 hover:border-none hover:outline-none outline-none border-none  placeholder:text-[#90000080] font-medium tracking-wider text-[#900000] text-lg "}
                          />
                        </div>
                      </div>

                    </div>
                  </div>
                </div>
              )}
              {steps == 0 && (
                <div>
                  <div className="z-50 grid grid-flow-row grid-cols-2 gap-x-5" >
                    <div
                      onClick={() => {
                        setIsMale(true);
                        // handleNext();
                      }}
                      className={"bg-white z-50 cursor-pointer flex justify-between  gap-x-2 px-5 border-[1px] border-[#900000] item-center my-4 rounded-full py-2"}
                    >
                      <div className="flex items-center gap-x-2">
                        <img className="scale-90" src="/assets/images/man.png" alt="" />
                        <span className="text-[#900000] text-[20px] font-[500]  " >पुरुष</span>
                      </div>
                      {
                        isMale ?
                          <div className="border-[2px] mr-3 translate-y-[10px] w-4 h-4  bg-[#900000] rounded-full border-[#900000] "></div>
                          :
                          <div className="border-[2px] mr-3 translate-y-[10px] w-4 h-4  rounded-full border-[#900000]"></div>
                      }
                    </div>

                    <div
                      onClick={() => {
                        setIsMale(false);
                        // handleNext();
                      }}
                      className={"bg-white z-50 justify-between border-[1px] border-[#900000] cursor-pointer flex  gap-x-2 px-5 item-center my-4 rounded-full py-2"}
                    >
                      <div className="flex items-center gap-x-2">
                        <img className="scale-90" src="/assets/images/women.png" alt="" />
                        <span className="text-[#900000] text-[20px] font-[500] " >महिला</span>
                      </div>
                      {
                        isMale == false ?
                          <div className="border-[2px] mr-3 translate-y-[10px] w-4 h-4 bg-[#900000]  rounded-full border-[#900000] ">
                          </div>
                          :
                          <div className="border-[2px] mr-3 translate-y-[10px] w-4 h-4  rounded-full border-[#900000]"></div>
                      }
                    </div>
                  </div>

                  <div
                    onClick={() => {
                      handleNext();
                    }}
                  >
                    <button className=" w-full gap-x-3 text-center text-xl py-2 flex justify-center items-center rounded-full z-50 bg-[#900000]  font-bold " >
                      <span>
                        चलो अयोध्या
                      </span>
                      <svg width="36" height="26" viewBox="0 0 36 34" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <rect width="2" height="34" rx="1" fill="#F36E16" />
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M25.3441 9.43065C18.5473 9.27567 20.0238 3.57025 14.7923 3.80824C9.56578 4.03973 9.98531 5.25493 5.02741 2.53014C2.1246 0.937258 3.71045 -0.000183105 0 0V22.5777C1.70532 23.1169 5.01974 23.6269 7.81123 20.8137C11.7497 16.8482 13.9914 22.0587 17.3181 18.8724C20.6459 15.6806 22.3572 15.2698 27.0447 16.8239C31.7261 18.3864 36 11.4029 36 11.4029C31.1077 12.8782 32.1349 9.58563 25.3441 9.43065Z" fill="#F36E16" />
                        <path d="M7.06188 7.18418V7.76618H6.67188V11.0002H5.83188V8.72618H5.38188V9.85418C5.38188 10.0982 5.31988 10.2722 5.19588 10.3762C5.07588 10.4802 4.86588 10.5322 4.56588 10.5322H4.06788C3.76788 10.5322 3.55588 10.4802 3.43188 10.3762C3.31188 10.2722 3.25188 10.0982 3.25188 9.85418V8.14418H4.08588V9.79418C4.08588 9.85418 4.09788 9.89618 4.12188 9.92018C4.14988 9.94018 4.19188 9.95018 4.24788 9.95018H4.38588C4.44188 9.95018 4.48188 9.94018 4.50588 9.92018C4.53388 9.89618 4.54788 9.85418 4.54788 9.79418V8.14418H5.83188V7.76618H2.87988V7.18418H7.06188Z" fill="white" />
                        <path d="M10.4712 7.18418V7.76618H10.0872V11.0002H9.24724V10.4482C9.19124 10.5042 9.10324 10.5322 8.98324 10.5322H7.99324C7.70924 10.5322 7.50124 10.4802 7.36924 10.3762C7.24124 10.2682 7.17724 10.0942 7.17724 9.85418V8.67818H7.84324C7.89924 8.67818 7.93724 8.66818 7.95724 8.64818C7.98124 8.62818 7.99324 8.59218 7.99324 8.54018V7.96418C7.99324 7.88418 7.97924 7.83218 7.95124 7.80818C7.92324 7.78018 7.86324 7.76618 7.77124 7.76618H6.78724V7.18418H10.4712ZM9.24724 9.74618V7.76618H8.73124C8.77924 7.81818 8.80324 7.89618 8.80324 8.00018V8.63018C8.80324 8.84218 8.75124 9.00018 8.64724 9.10418C8.54324 9.20818 8.35724 9.26018 8.08924 9.26018H8.01124V9.79418C8.01124 9.85418 8.02124 9.89618 8.04124 9.92018C8.06524 9.94018 8.10724 9.95018 8.16724 9.95018H9.04324C9.12324 9.95018 9.17724 9.93618 9.20524 9.90818C9.23324 9.87618 9.24724 9.82218 9.24724 9.74618Z" fill="white" />
                        <path d="M14.2697 7.18418H15.4937V7.76618H15.1097V11.0002H14.2697V10.0522L13.5857 10.7302H12.6677L14.1677 9.26618H13.4117L12.4997 10.1122H11.5337L12.4577 9.26618C12.1897 9.25818 11.9997 9.20218 11.8877 9.09818C11.7757 8.99018 11.7197 8.82218 11.7197 8.59418V7.85618C11.7197 7.61618 11.7797 7.44418 11.8997 7.34018C12.0237 7.23618 12.2357 7.18418 12.5357 7.18418H12.9857C13.2857 7.18418 13.4977 7.23618 13.6217 7.34018C13.7457 7.44418 13.8077 7.61618 13.8077 7.85618V8.52818C13.8077 8.61618 13.7857 8.68618 13.7417 8.73818H14.2697V7.18418ZM12.5537 7.85618V8.59418C12.5537 8.69018 12.6037 8.73818 12.7037 8.73818H12.8177C12.9177 8.73818 12.9677 8.69018 12.9677 8.59418V7.85618C12.9677 7.76018 12.9177 7.71218 12.8177 7.71218H12.7037C12.6037 7.71218 12.5537 7.76018 12.5537 7.85618Z" fill="white" />
                        <path d="M16.8689 7.18418V7.76618H16.4789V11.0002H15.6449V7.76618H15.2549V7.18418H15.6449V6.72218C15.6449 6.63418 15.6309 6.57818 15.6029 6.55418C15.5789 6.52618 15.5229 6.51218 15.4349 6.51218H15.1889C15.1009 6.51218 15.0449 6.52618 15.0209 6.55418C14.9929 6.57818 14.9789 6.63418 14.9789 6.72218V6.96218H14.1449V6.54818C14.1449 6.13618 14.3629 5.93018 14.7989 5.93018H15.8249C16.2609 5.93018 16.4789 6.13618 16.4789 6.54818V7.18418H16.8689Z" fill="white" />
                        <path d="M5.69988 14.1842V14.7662H5.30388C5.32788 14.8022 5.33988 14.8522 5.33988 14.9162V15.8102C5.33988 16.0302 5.26788 16.1902 5.12388 16.2902C4.98388 16.3862 4.75788 16.4342 4.44588 16.4342H4.08588V17.3222C4.08588 17.3742 4.09588 17.4102 4.11588 17.4302C4.13988 17.4502 4.18188 17.4602 4.24188 17.4602H4.37388C4.45788 17.4602 4.49988 17.4142 4.49988 17.3222V16.7642H5.33988V17.4062C5.33988 17.6142 5.28388 17.7662 5.17188 17.8622C5.06388 17.9542 4.87588 18.0002 4.60788 18.0002H3.97788C3.70988 18.0002 3.52188 17.9542 3.41388 17.8622C3.30588 17.7662 3.25188 17.6142 3.25188 17.4062V15.2162H4.08588V15.8582H4.30788C4.38388 15.8582 4.43588 15.8442 4.46388 15.8162C4.49188 15.7882 4.50588 15.7362 4.50588 15.6602V14.9642C4.50588 14.8842 4.49188 14.8322 4.46388 14.8082C4.43988 14.7802 4.38788 14.7662 4.30788 14.7662H2.87988V14.1842H5.69988Z" fill="white" />
                        <path d="M7.07201 14.1842V14.7662H6.68201V18.0002H5.84801V14.7662H5.45801V14.1842H7.07201Z" fill="white" />
                        <path d="M11.0531 14.1842V14.7662H10.6631V18.0002H9.8291V15.9902H9.2951V16.8002C9.2951 17.0442 9.2331 17.2182 9.1091 17.3222C8.9891 17.4262 8.7791 17.4782 8.4791 17.4782H7.9571C7.6571 17.4782 7.4451 17.4262 7.3211 17.3222C7.2011 17.2182 7.1411 17.0442 7.1411 16.8002V16.0022C7.1411 15.7942 7.1951 15.6442 7.3031 15.5522C7.4111 15.4562 7.5991 15.4082 7.8671 15.4082H8.4611V14.7662H6.8291V14.1842H11.0531ZM8.4611 16.7402V15.9902H8.0531C7.9971 15.9902 7.9571 16.0002 7.9331 16.0202C7.9131 16.0402 7.9031 16.0762 7.9031 16.1282V16.7402C7.9031 16.8002 7.9151 16.8422 7.9391 16.8662C7.9631 16.8862 8.0031 16.8962 8.0591 16.8962H8.2991C8.3551 16.8962 8.3951 16.8862 8.4191 16.8662C8.4471 16.8422 8.4611 16.8002 8.4611 16.7402ZM9.8291 15.4082V14.7662H9.2951V15.4082H9.8291Z" fill="white" />
                      </svg>
                    </button>
                  </div>
                </div>
              )}
              {steps == 1 && (
                <div className={"AVATARS flex md:h-full flex-col items-center justify-center space-y-4 pt-4"}>
                  <div className="flex flex-col shrink-0 gap-1 grow w-full max-w-2xl justify-center items-center ">
                    <video src="/assets/images/loader.mp4" autoPlay width={300} className="cursor-pointer" />
                    <div className="flex flex-row  gap-3  overflow-x-hidden ">
                      {isMale &&
                        allAvatarModels.map((model, index) => {
                          return (


                            // <div key={index} className="flex shrink-0 flex-col gap-3 py-2 border border-gray-400 rounded-xl">
                            //   <Image
                            //     width={100}
                            //     height={100}
                            //     unoptimized
                            //     priority={true}
                            //     alt="avatar"
                            //     src={model.link}
                            //     onClick={() => {
                            //       //   window.open("https://metaverse-elections.netlify.app?avatarUrl=" + avatarUrlSplitter(model.name) + "&name=" + username + "&gender=" + (isMale ? "male" : "female"));
                            //       // window.open("https://elections.abpverse.com/?avatarUrl=" + avatarUrlSplitter(model.name) + "&name=" + username + (isSafari ? "&browser=safari" : ""));
                            //       window.open("http://moonsdemo.world/")
                            //     }}
                            //     className={`flex shrink-0 md:w-28 w-24  md:h-28 h-24 object-cover bg-transparent   md:mt-0 ${avatarUrl == model.name ? " border-4  border-gray-400 rounded-lg cursor-pointer" : "bg-gray-400 cursor-pointer rounded-lg"}`}
                            //   />
                            // </div>
                            <div></div>
                          );
                        })}
                      {isMale == false &&
                        femaleAvatarModels.map((model, index) => {
                          return (
                            // <div key={index} className="flex shrink-0 flex-col gap-3 py-2 border border-gray-400 rounded-xl">
                            //   <Image
                            //     width={100}
                            //     height={100}
                            //     unoptimized
                            //     priority={true}
                            //     alt="avatar"
                            //     src={model.link}
                            //     onClick={() => {
                            //       //   window.open("https://metaverse-elections.netlify.app?avatarUrl=" + avatarUrlSplitter(model.name) + "&name=" + username + "&gender=" + (isMale ? "male" : "female"));
                            //       // window.open("https://elections.abpverse.com/?avatarUrl=" + avatarUrlSplitter(model.name) + "&name=" + username + (isSafari ? "&browser=safari" : ""));
                            //       window.open("http://moonsdemo.world/")
                            //     }}
                            //     className={`flex shrink-0 md:w-28 w-24  md:h-28 h-24 object-cover bg-transparent   md:mt-0 ${avatarUrl == model.name ? " border-4  border-gray-400 rounded-lg cursor-pointer" : "bg-gray-400 cursor-pointer rounded-lg"}`}
                            //   />
                            // </div>
                            <div></div>
                          );
                        })}
                    </div>
                  </div>

                  {/* <div className="text-white font-bold animate-pulse flex justify-center">{warning}</div> */}
                </div>
              )}

              {steps == 1 && avatarUrl == "" && username && username != "" && username.length > 3 && (
                <div>
                  {/* <div className="flex justify-center">
                    <div className="h-px bg-custom-orange w-1/2 mt-2 mx-2 "></div>
                    <div className="text-custom-orange">OR</div>
                    <div className="h-px bg-custom-orange w-1/2 mt-2 mx-2"></div>
                  </div> */}
                  {/* <div className="flex mt-4  flex-col space-y-4  mb-8">
                    <div onClick={() => setIsFrameOpen(true)} className="bg-gradient-to-r from-[#dba649] to-custom-orange rounded-xl w-full border-2 cursor-pointer border-custom-orange max-w-md    text-center self-center md:p-4 p-4 text-white text-xl font-bold">
                      Create Custom Avatar
                    </div>
                  </div> */}
                </div>
              )}
              {steps == 1 && avatarUrl && avatarUrl != "" && combineAndLoadAnimation(avatarUrl)}

              {/* {steps == 2 && avatarUrl != "" && username && username != "" && username.length > 3 && (
                <div className="flex mt-4  flex-col space-y-4  mb-8">
                  <div onClick={() => combineAndLoadAnimation(avatarUrl)} className="bg-gradient-to-r from-[#dba649] to-custom-orange rounded-xl w-full border-2 cursor-pointer border-custom-orange max-w-md    text-center self-center md:p-4 p-4 text-white text-xl font-bold">
                    Confirm Avatar
                  </div>
                </div>
              )} */}

              {steps == 2 && avatarUrl && avatarUrl != "" && (
                <div>
                  <div className="gradient_blue w-screen h-screen overflow-hidden fixed top-0 left-0">
                    <div className="absolute top-1/2 -translate-y-1/2 flex z-20 flex-col justify-center items-center">
                      {
                        <div className="flex flex-col text-white items-center justify-center w-screen text-center">
                          <img src="/assets/images/loader.gif" className="my-8 w-[300px] h-[300px]" />
                          {progress === 100 ? (
                            <h1>Please Click on the Button below to Enter Independence Day Event</h1>
                          ) : (
                            <div className="flex flex-col gap-4">
                              <div className="py-2">Thanks for Submitting Your Picture</div> Loading {progress > 0 ? <>: {progress}%</> : <></>}..
                            </div>
                          )}
                        </div>
                      }
                      {steps == 2 && progress == 100 && avatarUrl != "" && username && username != "" && username.length > 3 && progress == 100 && (
                        <div className="flex mt-4  flex-col space-y-4  mb-8">
                          <div onClick={() => takeToTheMetaverse()} className="bg-gradient-to-r from-[#dba649] to-gray-400 rounded-xl w-full border-2 cursor-pointer border-gray-400 max-w-md    text-center self-center md:p-4 p-4 px-6 text-white text-xl font-bold">
                            Enter Event
                          </div>
                        </div>
                      )}
                    </div>
                    <video className="mix-blend-soft-light object-fill h-screen w-full" autoPlay muted loop playsInline>
                      <source src="/assets/images/perspective.mp4" type="video/mp4" />
                      Video formats are not supported by your browser
                    </video>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
        {/* // )} */}
      </div>



      {/* {isFrameOpen && <AvatarIframe setRpmFrame={setIsFrameOpen} setReadyPlayerUrl={setAvatarUrl} isMale={isMale} />} */}

      {isFrameOpen && <AvatarIframe setRpmFrame={setIsFrameOpen} setReadyPlayerUrl={setAvatarUrl} isMale={isMale} />}
    </>
  );
}
